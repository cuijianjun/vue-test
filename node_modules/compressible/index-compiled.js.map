{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;AAQA;;AAEA;;;;;AAKA,IAAI,KAAK,QAAQ,SAAR,CAAT;;AAEA;;;;;AAKA,IAAI,2BAA2B,+BAA/B;AACA,IAAI,sBAAsB,yBAA1B;;AAEA;;;;;AAKA,OAAO,OAAP,GAAiB,YAAjB;;AAEA;;;;;;;;AAQA,SAAS,YAAT,CAAuB,IAAvB,EAA6B;AAC3B,MAAI,CAAC,IAAD,IAAS,OAAO,IAAP,KAAgB,QAA7B,EAAuC;AACrC,WAAO,KAAP;AACD;;AAED;AACA,MAAI,QAAQ,oBAAoB,IAApB,CAAyB,IAAzB,CAAZ;AACA,MAAI,OAAO,SAAS,MAAM,CAAN,EAAS,WAAT,EAApB;AACA,MAAI,OAAO,GAAG,IAAH,CAAX;;AAEA;AACA,MAAI,QAAQ,KAAK,YAAL,KAAsB,SAAlC,EAA6C;AAC3C,WAAO,KAAK,YAAZ;AACD;;AAED;AACA,SAAO,yBAAyB,IAAzB,CAA8B,IAA9B,KAAuC,SAA9C;AACD","file":"index-compiled.js","sourcesContent":["/*!\n * compressible\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Jeremiah Senkpiel\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\n\n/**\n * Module variables.\n * @private\n */\n\nvar COMPRESSIBLE_TYPE_REGEXP = /^text\\/|\\+(?:json|text|xml)$/i\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = compressible\n\n/**\n * Checks if a type is compressible.\n *\n * @param {string} type\n * @return {Boolean} compressible\n * @public\n */\n\nfunction compressible (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // strip parameters\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && match[1].toLowerCase()\n  var data = db[mime]\n\n  // return database information\n  if (data && data.compressible !== undefined) {\n    return data.compressible\n  }\n\n  // fallback to regexp or unknown\n  return COMPRESSIBLE_TYPE_REGEXP.test(mime) || undefined\n}\n"]}