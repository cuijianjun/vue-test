{"version":3,"sources":["analyze.js"],"names":[],"mappings":"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","file":"analyze-compiled.js","sourcesContent":["/*\n * Author: Alex Kocharin <alex@kocharin.ru>\n * GIT: https://github.com/rlidwka/jju\n * License: WTFPL, grab your copy here: http://www.wtfpl.net/txt/copying/\n */\n\nvar tokenize = require('./parse').tokenize\n\nmodule.exports.analyze = function analyzeJSON(input, options) {\n  if (options == null) options = {}\n\n  if (!Array.isArray(input)) {\n    input = tokenize(input, options)\n  }\n\n  var result = {\n    has_whitespace: false,\n    has_comments: false,\n    has_newlines: false,\n    has_trailing_comma: false,\n    indent: '',\n    newline: '\\n',\n    quote: '\"',\n    quote_keys: true,\n  }\n\n  var stats = {\n    indent: {},\n    newline: {},\n    quote: {},\n  }\n\n  for (var i=0; i<input.length; i++) {\n    if (input[i].type === 'newline') {\n      if (input[i+1] && input[i+1].type === 'whitespace') {\n        if (input[i+1].raw[0] === '\\t') {\n          // if first is tab, then indent is tab\n          stats.indent['\\t'] = (stats.indent['\\t'] || 0) + 1\n        }\n        if (input[i+1].raw.match(/^\\x20+$/)) {\n          // if all are spaces, then indent is space\n          // this can fail with mixed indent (4, 2 would display 3)\n          var ws_len = input[i+1].raw.length\n          var indent_len = input[i+1].stack.length + 1\n          if (ws_len % indent_len === 0) {\n            var t = Array(ws_len / indent_len + 1).join(' ')\n            stats.indent[t] = (stats.indent[t] || 0) + 1\n          }\n        }\n      }\n\n      stats.newline[input[i].raw] = (stats.newline[input[i].raw] || 0) + 1\n    }\n\n    if (input[i].type === 'newline') {\n      result.has_newlines = true\n    }\n    if (input[i].type === 'whitespace') {\n      result.has_whitespace = true\n    }\n    if (input[i].type === 'comment') {\n      result.has_comments = true\n    }\n    if (input[i].type === 'key') {\n      if (input[i].raw[0] !== '\"' && input[i].raw[0] !== \"'\") result.quote_keys = false\n    }\n\n    if (input[i].type === 'key' || input[i].type === 'literal') {\n      if (input[i].raw[0] === '\"' || input[i].raw[0] === \"'\") {\n        stats.quote[input[i].raw[0]] = (stats.quote[input[i].raw[0]] || 0) + 1\n      }\n    }\n\n    if (input[i].type === 'separator' && input[i].raw === ',') {\n      for (var j=i+1; j<input.length; j++) {\n        if (input[j].type === 'literal' || input[j].type === 'key') break\n        if (input[j].type === 'separator') result.has_trailing_comma = true\n      }\n    }\n  }\n\n  for (var k in stats) {\n    if (Object.keys(stats[k]).length) {\n      result[k] = Object.keys(stats[k]).reduce(function(a, b) {\n        return stats[k][a] > stats[k][b] ? a : b\n      })\n    }\n  }\n\n  return result\n}\n\n"]}