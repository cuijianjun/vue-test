{"version":3,"sources":["document.js"],"names":[],"mappings":"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","file":"document-compiled.js","sourcesContent":["/*\n * Author: Alex Kocharin <alex@kocharin.ru>\n * GIT: https://github.com/rlidwka/jju\n * License: WTFPL, grab your copy here: http://www.wtfpl.net/txt/copying/\n */\n\nvar assert = require('assert')\nvar tokenize = require('./parse').tokenize\nvar stringify = require('./stringify').stringify\nvar analyze = require('./analyze').analyze\n\nfunction isObject(x) {\n  return typeof(x) === 'object' && x !== null\n}\n\nfunction value_to_tokenlist(value, stack, options, is_key, indent) {\n  options = Object.create(options)\n  options._stringify_key = !!is_key\n\n  if (indent) {\n    options._prefix = indent.prefix.map(function(x) {\n      return x.raw\n    }).join('')\n  }\n\n  if (options._splitMin == null) options._splitMin = 0\n  if (options._splitMax == null) options._splitMax = 0\n\n  var stringified = stringify(value, options)\n\n  if (is_key) {\n    return [ { raw: stringified, type: 'key', stack: stack, value: value } ]\n  }\n\n  options._addstack = stack\n  var result = tokenize(stringified, {\n    _addstack: stack,\n  })\n  result.data = null\n  return result\n}\n\n// '1.2.3' -> ['1','2','3']\nfunction arg_to_path(path) {\n  // array indexes\n  if (typeof(path) === 'number') path = String(path)\n\n  if (path === '') path = []\n  if (typeof(path) === 'string') path = path.split('.')\n\n  if (!Array.isArray(path)) throw Error('Invalid path type, string or array expected')\n  return path\n}\n\n// returns new [begin, end] or false if not found\n//\n//          {x:3, xxx: 111, y: [111,  {q: 1, e: 2}  ,333]  }\n// f('y',0) returns this       B^^^^^^^^^^^^^^^^^^^^^^^^E\n// then f('1',1) would reduce it to   B^^^^^^^^^^E\nfunction find_element_in_tokenlist(element, lvl, tokens, begin, end) {\n  while(tokens[begin].stack[lvl] != element) {\n    if (begin++ >= end) return false\n  }\n  while(tokens[end].stack[lvl] != element) {\n    if (end-- < begin) return false\n  }\n  return [begin, end]\n}\n\nfunction is_whitespace(token_type) {\n  return token_type === 'whitespace'\n      || token_type === 'newline'\n      || token_type === 'comment'\n}\n\nfunction find_first_non_ws_token(tokens, begin, end) {\n  while(is_whitespace(tokens[begin].type)) {\n    if (begin++ >= end) return false\n  }\n  return begin\n}\n\nfunction find_last_non_ws_token(tokens, begin, end) {\n  while(is_whitespace(tokens[end].type)) {\n    if (end-- < begin) return false\n  }\n  return end\n}\n\n/*\n * when appending a new element of an object/array, we are trying to\n * figure out the style used on the previous element\n *\n * return {prefix, sep1, sep2, suffix}\n *\n *      '    \"key\" :  \"element\"    \\r\\n'\n * prefix^^^^ sep1^ ^^sep2     ^^^^^^^^suffix\n *\n * begin - the beginning of the object/array\n * end - last token of the last element (value or comma usually)\n */\nfunction detect_indent_style(tokens, is_array, begin, end, level) {\n  var result = {\n    sep1: [],\n    sep2: [],\n    suffix: [],\n    prefix: [],\n    newline: [],\n  }\n\n  if (tokens[end].type === 'separator' && tokens[end].stack.length !== level+1 && tokens[end].raw !== ',') {\n    // either a beginning of the array (no last element) or other weird situation\n    //\n    // just return defaults\n    return result\n  }\n\n  //                              ' \"key\"  : \"value\"  ,'\n  // skipping last separator, we're now here        ^^\n  if (tokens[end].type === 'separator')\n    end = find_last_non_ws_token(tokens, begin, end - 1)\n  if (end === false) return result\n\n  //                              ' \"key\"  : \"value\"  ,'\n  // skipping value                          ^^^^^^^\n  while(tokens[end].stack.length > level) end--\n\n  if (!is_array) {\n    while(is_whitespace(tokens[end].type)) {\n      if (end < begin) return result\n      if (tokens[end].type === 'whitespace') {\n        result.sep2.unshift(tokens[end])\n      } else {\n        // newline, comment or other unrecognized codestyle\n        return result\n      }\n      end--\n    }\n\n    //                              ' \"key\"  : \"value\"  ,'\n    // skipping separator                    ^\n    assert.equal(tokens[end].type, 'separator')\n    assert.equal(tokens[end].raw, ':')\n    while(is_whitespace(tokens[--end].type)) {\n      if (end < begin) return result\n      if (tokens[end].type === 'whitespace') {\n        result.sep1.unshift(tokens[end])\n      } else {\n        // newline, comment or other unrecognized codestyle\n        return result\n      }\n    }\n\n    assert.equal(tokens[end].type, 'key')\n    end--\n  }\n\n  //                              ' \"key\"  : \"value\"  ,'\n  // skipping key                   ^^^^^\n  while(is_whitespace(tokens[end].type)) {\n    if (end < begin) return result\n    if (tokens[end].type === 'whitespace') {\n      result.prefix.unshift(tokens[end])\n    } else if (tokens[end].type === 'newline') {\n      result.newline.unshift(tokens[end])\n      return result\n    } else {\n      // comment or other unrecognized codestyle\n      return result\n    }\n    end--\n  }\n\n  return result\n}\n\nfunction Document(text, options) {\n  var self = Object.create(Document.prototype)\n\n  if (options == null) options = {}\n  //options._structure = true\n  var tokens = self._tokens = tokenize(text, options)\n  self._data = tokens.data\n  tokens.data = null\n  self._options = options\n\n  var stats = analyze(text, options)\n  if (options.indent == null) {\n    options.indent = stats.indent\n  }\n  if (options.quote == null) {\n    options.quote = stats.quote\n  }\n  if (options.quote_keys == null) {\n    options.quote_keys = stats.quote_keys\n  }\n  if (options.no_trailing_comma == null) {\n    options.no_trailing_comma = !stats.has_trailing_comma\n  }\n  return self\n}\n\n// return true if it's a proper object\n//        throw otherwise\nfunction check_if_can_be_placed(key, object, is_unset) {\n  //if (object == null) return false\n  function error(add) {\n    return Error(\"You can't \" + (is_unset ? 'unset' : 'set') + \" key '\" + key + \"'\" + add)\n  }\n\n  if (!isObject(object)) {\n    throw error(' of an non-object')\n  }\n  if (Array.isArray(object)) {\n    // array, check boundary\n    if (String(key).match(/^\\d+$/)) {\n      key = Number(String(key))\n      if (object.length < key || (is_unset && object.length === key)) {\n        throw error(', out of bounds')\n      } else if (is_unset && object.length !== key+1) {\n        throw error(' in the middle of an array')\n      } else {\n        return true\n      }\n    } else {\n      throw error(' of an array')\n    }\n  } else {\n    // object\n    return true\n  }\n}\n\n// usage: document.set('path.to.something', 'value')\n//    or: document.set(['path','to','something'], 'value')\nDocument.prototype.set = function(path, value) {\n  path = arg_to_path(path)\n\n  // updating this._data and check for errors\n  if (path.length === 0) {\n    if (value === undefined) throw Error(\"can't remove root document\")\n    this._data = value\n    var new_key = false\n\n  } else {\n    var data = this._data\n\n    for (var i=0; i<path.length-1; i++) {\n      check_if_can_be_placed(path[i], data, false)\n      data = data[path[i]]\n    }\n    if (i === path.length-1) {\n      check_if_can_be_placed(path[i], data, value === undefined)\n    }\n\n    var new_key = !(path[i] in data)\n\n    if (value === undefined) {\n      if (Array.isArray(data)) {\n        data.pop()\n      } else {\n        delete data[path[i]]\n      }\n    } else {\n      data[path[i]] = value\n    }\n  }\n\n  // for inserting document\n  if (!this._tokens.length)\n    this._tokens = [ { raw: '', type: 'literal', stack: [], value: undefined } ]\n\n  var position = [\n    find_first_non_ws_token(this._tokens, 0, this._tokens.length - 1),\n    find_last_non_ws_token(this._tokens, 0, this._tokens.length - 1),\n  ]\n  for (var i=0; i<path.length-1; i++) {\n    position = find_element_in_tokenlist(path[i], i, this._tokens, position[0], position[1])\n    if (position == false) throw Error('internal error, please report this')\n  }\n  // assume that i == path.length-1 here\n\n  if (path.length === 0) {\n    var newtokens = value_to_tokenlist(value, path, this._options)\n    // all good\n\n  } else if (!new_key) {\n    // replace old value with a new one (or deleting something)\n    var pos_old = position\n    position = find_element_in_tokenlist(path[i], i, this._tokens, position[0], position[1])\n\n    if (value === undefined && position !== false) {\n      // deleting element (position !== false ensures there's something)\n      var newtokens = []\n\n      if (!Array.isArray(data)) {\n        // removing element from an object, `{x:1, key:CURRENT} -> {x:1}`\n        // removing sep, literal and optional sep\n        // ':'\n        var pos2 = find_last_non_ws_token(this._tokens, pos_old[0], position[0] - 1)\n        assert.equal(this._tokens[pos2].type, 'separator')\n        assert.equal(this._tokens[pos2].raw, ':')\n        position[0] = pos2\n\n        // key\n        var pos2 = find_last_non_ws_token(this._tokens, pos_old[0], position[0] - 1)\n        assert.equal(this._tokens[pos2].type, 'key')\n        assert.equal(this._tokens[pos2].value, path[path.length-1])\n        position[0] = pos2\n      }\n\n      // removing comma in arrays and objects\n      var pos2 = find_last_non_ws_token(this._tokens, pos_old[0], position[0] - 1)\n      assert.equal(this._tokens[pos2].type, 'separator')\n      if (this._tokens[pos2].raw === ',') {\n        position[0] = pos2\n      } else {\n        // beginning of the array/object, so we should remove trailing comma instead\n        pos2 = find_first_non_ws_token(this._tokens, position[1] + 1, pos_old[1])\n        assert.equal(this._tokens[pos2].type, 'separator')\n        if (this._tokens[pos2].raw === ',') {\n          position[1] = pos2\n        }\n      }\n\n    } else {\n      var indent = pos2 !== false\n                 ? detect_indent_style(this._tokens, Array.isArray(data), pos_old[0], position[1] - 1, i)\n                 : {}\n      var newtokens = value_to_tokenlist(value, path, this._options, false, indent)\n    }\n\n  } else {\n    // insert new key, that's tricky\n    var path_1 = path.slice(0, i)\n\n    //  find a last separator after which we're inserting it\n    var pos2 = find_last_non_ws_token(this._tokens, position[0] + 1, position[1] - 1)\n    assert(pos2 !== false)\n\n    var indent = pos2 !== false\n               ? detect_indent_style(this._tokens, Array.isArray(data), position[0] + 1, pos2, i)\n               : {}\n\n    var newtokens = value_to_tokenlist(value, path, this._options, false, indent)\n\n    // adding leading whitespaces according to detected codestyle\n    var prefix = []\n    if (indent.newline && indent.newline.length)\n      prefix = prefix.concat(indent.newline)\n    if (indent.prefix && indent.prefix.length)\n      prefix = prefix.concat(indent.prefix)\n\n    // adding '\"key\":' (as in \"key\":\"value\") to object values\n    if (!Array.isArray(data)) {\n      prefix = prefix.concat(value_to_tokenlist(path[path.length-1], path_1, this._options, true))\n      if (indent.sep1 && indent.sep1.length)\n        prefix = prefix.concat(indent.sep1)\n      prefix.push({raw: ':', type: 'separator', stack: path_1})\n      if (indent.sep2 && indent.sep2.length)\n        prefix = prefix.concat(indent.sep2)\n    }\n\n    newtokens.unshift.apply(newtokens, prefix)\n\n    // check if prev token is a separator AND they're at the same level\n    if (this._tokens[pos2].type === 'separator' && this._tokens[pos2].stack.length === path.length-1) {\n      // previous token is either , or [ or {\n      if (this._tokens[pos2].raw === ',') {\n        // restore ending comma\n        newtokens.push({raw: ',', type: 'separator', stack: path_1})\n      }\n    } else {\n      // previous token isn't a separator, so need to insert one\n      newtokens.unshift({raw: ',', type: 'separator', stack: path_1})\n    }\n\n    if (indent.suffix && indent.suffix.length)\n      newtokens.push.apply(newtokens, indent.suffix)\n\n    assert.equal(this._tokens[position[1]].type, 'separator')\n    position[0] = pos2+1\n    position[1] = pos2\n  }\n\n  newtokens.unshift(position[1] - position[0] + 1)\n  newtokens.unshift(position[0])\n  this._tokens.splice.apply(this._tokens, newtokens)\n\n  return this\n}\n\n// convenience method\nDocument.prototype.unset = function(path) {\n  return this.set(path, undefined)\n}\n\nDocument.prototype.get = function(path) {\n  path = arg_to_path(path)\n\n  var data = this._data\n  for (var i=0; i<path.length; i++) {\n    if (!isObject(data)) return undefined\n    data = data[path[i]]\n  }\n  return data\n}\n\nDocument.prototype.has = function(path) {\n  path = arg_to_path(path)\n\n  var data = this._data\n  for (var i=0; i<path.length; i++) {\n    if (!isObject(data)) return false\n    data = data[path[i]]\n  }\n  return data !== undefined\n}\n\n// compare old object and new one, and change differences only\nDocument.prototype.update = function(value) {\n  var self = this\n  change([], self._data, value)\n  return self\n\n  function change(path, old_data, new_data) {\n    if (!isObject(new_data) || !isObject(old_data)) {\n      // if source or dest is primitive, just replace\n      if (new_data !== old_data)\n        self.set(path, new_data)\n\n    } else if (Array.isArray(new_data) != Array.isArray(old_data)) {\n      // old data is an array XOR new data is an array, replace as well\n      self.set(path, new_data)\n\n    } else if (Array.isArray(new_data)) {\n      // both values are arrays here\n\n      if (new_data.length > old_data.length) {\n        // adding new elements, so going forward\n        for (var i=0; i<new_data.length; i++) {\n          path.push(String(i))\n          change(path, old_data[i], new_data[i])\n          path.pop()\n        }\n\n      } else {\n        // removing something, so going backward\n        for (var i=old_data.length-1; i>=0; i--) {\n          path.push(String(i))\n          change(path, old_data[i], new_data[i])\n          path.pop()\n        }\n      }\n\n    } else {\n      // both values are objects here\n      for (var i in new_data) {\n        path.push(String(i))\n        change(path, old_data[i], new_data[i])\n        path.pop()\n      }\n\n      for (var i in old_data) {\n        if (i in new_data) continue\n        path.push(String(i))\n        change(path, old_data[i], new_data[i])\n        path.pop()\n      }\n    }\n  }\n}\n\nDocument.prototype.toString = function() {\n  return this._tokens.map(function(x) {\n    return x.raw\n  }).join('')\n}\n\nmodule.exports.Document = Document\n\nmodule.exports.update = function updateJSON(source, new_value, options) {\n  return Document(source, options).update(new_value).toString()\n}\n\n"]}