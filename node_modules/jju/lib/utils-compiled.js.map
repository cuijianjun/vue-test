{"version":3,"sources":["utils.js"],"names":[],"mappings":"AAAA,IAAI,KAAM,QAAQ,IAAR,CAAV;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;;AAEA;AACA;AACA,OAAO,OAAP,CAAe,QAAf,GAA0B,YAAW;AACnC,MAAI,IAAI,OAAR;AAAA,MAAiB,IAAI,YAArB;AACA,IAAE,CAAF,EAAK,QAAL,IAAiB,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC9B;AACA,MAAE,OAAF,GAAY,IAAI,KAAJ,CAAU,GAAG,YAAH,CAAgB,CAAhB,EAAmB,MAAnB,CAAV,CAAZ;AACD,GAHD;AAID,CAND;;AAQA;AACA;AACA;AACA,OAAO,OAAP,CAAe,gBAAf,GAAkC,YAAW;AAC3C,MAAI,SAAS,KAAK,KAAlB;AACA,OAAK,KAAL,GAAa,UAAS,IAAT,EAAe,GAAf,EAAoB;AAC/B,QAAI;AACF,aAAO,OAAO,IAAP,EAAa,GAAb,CAAP;AACD,KAFD,CAEE,OAAM,GAAN,EAAW;AACX;AACA,cAAQ,KAAR,EAAe,KAAf,CAAqB,IAArB,EAA2B;AACzB,cAAM,MADmB;AAEzB,gBAAQ,IAFiB;AAGzB,iBAAS,GAHgB;AAIzB,uBAAe,SAJU;AAKzB,wBAAgB;AALS,OAA3B;;AAQA;AACA;AACA,YAAM,GAAN;AACD;AACF,GAjBD;AAkBD,CApBD;;AAsBA;AACA;AACA,OAAO,OAAP,CAAe,UAAf,GAA4B,YAAW;AACrC,SAAO,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC9B,UAAM,MAAM,qDAAN,CAAN;AACD,GAFD;AAGD,CAJD","file":"utils-compiled.js","sourcesContent":["var FS  = require('fs')\nvar jju = require('../')\n\n// this function registers json5 extension, so you\n// can do `require(\"./config.json5\")` kind of thing\nmodule.exports.register = function() {\n  var r = require, e = 'extensions'\n  r[e]['.json5'] = function(m, f) {\n    /*eslint no-sync:0*/\n    m.exports = jju.parse(FS.readFileSync(f, 'utf8'))\n  }\n}\n\n// this function monkey-patches JSON.parse, so it\n// will return an exact position of error in case\n// of parse failure\nmodule.exports.patch_JSON_parse = function() {\n  var _parse = JSON.parse\n  JSON.parse = function(text, rev) {\n    try {\n      return _parse(text, rev)\n    } catch(err) {\n      // this call should always throw\n      require('jju').parse(text, {\n        mode: 'json',\n        legacy: true,\n        reviver: rev,\n        reserved_keys: 'replace',\n        null_prototype: false,\n      })\n\n      // if it didn't throw, but original parser did,\n      // this is an error in this library and should be reported\n      throw err\n    }\n  }\n}\n\n// this function is an express/connect middleware\n// that accepts uploads in application/json5 format\nmodule.exports.middleware = function() {\n  return function(req, res, next) {\n    throw Error('this function is removed, use express-json5 instead')\n  }\n}\n\n"]}