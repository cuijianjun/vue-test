{"version":3,"sources":["alphabet.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,iBAAiB,QAAQ,2BAAR,CAArB;;AAEA,IAAI,WAAW,kEAAf;AACA,IAAI,QAAJ;AACA,IAAI,YAAJ;;AAEA,IAAI,QAAJ;;AAEA,SAAS,KAAT,GAAiB;AACb,eAAW,KAAX;AACH;;AAED,SAAS,aAAT,CAAuB,UAAvB,EAAmC;AAC/B,QAAI,CAAC,UAAL,EAAiB;AACb,YAAI,aAAa,QAAjB,EAA2B;AACvB,uBAAW,QAAX;AACA;AACH;AACD;AACH;;AAED,QAAI,eAAe,QAAnB,EAA6B;AACzB;AACH;;AAED,QAAI,WAAW,MAAX,KAAsB,SAAS,MAAnC,EAA2C;AACvC,cAAM,IAAI,KAAJ,CAAU,yCAAyC,SAAS,MAAlD,GAA2D,oCAA3D,GAAkG,WAAW,MAA7G,GAAsH,eAAtH,GAAwI,UAAlJ,CAAN;AACH;;AAED,QAAI,SAAS,WAAW,KAAX,CAAiB,EAAjB,EAAqB,MAArB,CAA4B,UAAS,IAAT,EAAe,GAAf,EAAoB,GAApB,EAAwB;AAC9D,eAAO,QAAQ,IAAI,WAAJ,CAAgB,IAAhB,CAAf;AACF,KAFY,CAAb;;AAIA,QAAI,OAAO,MAAX,EAAmB;AACf,cAAM,IAAI,KAAJ,CAAU,yCAAyC,SAAS,MAAlD,GAA2D,wDAA3D,GAAsH,OAAO,IAAP,CAAY,IAAZ,CAAhI,CAAN;AACH;;AAED,eAAW,UAAX;AACA;AACH;;AAED,SAAS,UAAT,CAAoB,UAApB,EAAgC;AAC5B,kBAAc,UAAd;AACA,WAAO,QAAP;AACH;;AAED,SAAS,OAAT,CAAiB,IAAjB,EAAuB;AACnB,mBAAe,IAAf,CAAoB,IAApB;AACA,QAAI,iBAAiB,IAArB,EAA2B;AACvB;AACA,uBAAe,IAAf;AACH;AACJ;;AAED,SAAS,OAAT,GAAmB;AACf,QAAI,CAAC,QAAL,EAAe;AACX,sBAAc,QAAd;AACH;;AAED,QAAI,cAAc,SAAS,KAAT,CAAe,EAAf,CAAlB;AACA,QAAI,cAAc,EAAlB;AACA,QAAI,IAAI,eAAe,SAAf,EAAR;AACA,QAAI,cAAJ;;AAEA,WAAO,YAAY,MAAZ,GAAqB,CAA5B,EAA+B;AAC3B,YAAI,eAAe,SAAf,EAAJ;AACA,yBAAiB,KAAK,KAAL,CAAW,IAAI,YAAY,MAA3B,CAAjB;AACA,oBAAY,IAAZ,CAAiB,YAAY,MAAZ,CAAmB,cAAnB,EAAmC,CAAnC,EAAsC,CAAtC,CAAjB;AACH;AACD,WAAO,YAAY,IAAZ,CAAiB,EAAjB,CAAP;AACH;;AAED,SAAS,WAAT,GAAuB;AACnB,QAAI,QAAJ,EAAc;AACV,eAAO,QAAP;AACH;AACD,eAAW,SAAX;AACA,WAAO,QAAP;AACH;;AAED;;;;;AAKA,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACnB,QAAI,mBAAmB,aAAvB;AACA,WAAO,iBAAiB,KAAjB,CAAP;AACH;;AAED,OAAO,OAAP,GAAiB;AACb,gBAAY,UADC;AAEb,UAAM,OAFO;AAGb,YAAQ,MAHK;AAIb,cAAU;AAJG,CAAjB","file":"alphabet-compiled.js","sourcesContent":["'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n"]}