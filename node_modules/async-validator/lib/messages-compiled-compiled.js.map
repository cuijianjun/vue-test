{"version":3,"sources":["messages-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,eAAP,MAA4B,sCAA5B;AACA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,SAAO;AADoC,CAA7C;AAGA,QAAQ,WAAR,GAAsB,WAAtB;AACA,SAAS,WAAT,GAAuB;AACrB,SAAO;AACL,eAAW,8BADN;AAEL,cAAU,gBAFL;AAGL,YAAQ,sBAHH;AAIL,gBAAY,oBAJP;AAKL,UAAM;AACJ,cAAQ,qCADJ;AAEJ,aAAO,6CAFH;AAGJ,eAAS;AAHL,KALD;AAUL,WAAO;AACL,cAAQ,gBADH;AAEL,cAAQ,2BAFH;AAGL,aAAO,iBAHF;AAIL,cAAQ,iBAJH;AAKL,cAAQ,gBALH;AAML,YAAM,gBAND;AAOL,iBAAW,gBAPN;AAQL,eAAS,iBARJ;AASL,eAAS,gBATJ;AAUL,cAAQ,sBAVH;AAWL,aAAO,sBAXF;AAYL,WAAK,sBAZA;AAaL,WAAK;AAbA,KAVF;AAyBL,YAAQ;AACN,WAAK,kCADC;AAEN,WAAK,mCAFC;AAGN,WAAK,wCAHC;AAIN,aAAO;AAJD,KAzBH;AA+BL,YAAQ;AACN,WAAK,kBADC;AAEN,WAAK,2BAFC;AAGN,WAAK,8BAHC;AAIN,aAAO;AAJD,KA/BH;AAqCL,WAAO;AACL,WAAK,iCADA;AAEL,WAAK,qCAFA;AAGL,WAAK,wCAHA;AAIL,aAAO;AAJF,KArCF;AA2CL,aAAS;AACP,gBAAU;AADH,KA3CJ;AA8CL,WAAO,SAAS,KAAT,GAAiB;AACtB,UAAI,SAAS,KAAK,KAAL,CAAW,gBAAgB,IAAhB,CAAX,CAAb;AACA,aAAO,KAAP,GAAe,KAAK,KAApB;AACA,aAAO,MAAP;AACD;AAlDI,GAAP;AAoDD;;AAED,IAAI,WAAW,QAAQ,QAAR,GAAmB,aAAlC;;AAEA","file":"messages-compiled-compiled.js","sourcesContent":["'use strict';\n\nimport _JSON$stringify from \"babel-runtime/core-js/json/stringify\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newMessages = newMessages;\nfunction newMessages() {\n  return {\n    \"default\": 'Validation error on field %s',\n    required: '%s is required',\n    \"enum\": '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid'\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      \"boolean\": '%s is not a %s',\n      integer: '%s is not an %s',\n      \"float\": '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s'\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters'\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s'\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length'\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s'\n    },\n    clone: function clone() {\n      var cloned = JSON.parse(_JSON$stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    }\n  };\n}\n\nvar messages = exports.messages = newMessages();\n\n//# sourceMappingURL=messages-compiled.js.map"]}