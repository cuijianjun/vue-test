{"version":3,"sources":["range.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,SAAO;AADoC,CAA7C;;AAIA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;;AAEA,IAAI,OAAO,wBAAwB,KAAxB,CAAX;;AAEA,SAAS,uBAAT,CAAiC,GAAjC,EAAsC;AAAE,MAAI,OAAO,IAAI,UAAf,EAA2B;AAAE,WAAO,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAI,SAAS,EAAb,CAAiB,IAAI,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AAAE,YAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,GAA1C,CAAJ,EAAoD,OAAO,GAAP,IAAc,IAAI,GAAJ,CAAd;AAAyB;AAAE,KAAC,OAAO,SAAP,IAAoB,GAApB,CAAyB,OAAO,MAAP;AAAgB;AAAE;;AAEhR;;;;;;;;;;;AAWA,SAAS,KAAT,CAAe,IAAf,EAAqB,KAArB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,OAA5C,EAAqD;AACnD,MAAI,MAAM,OAAO,KAAK,GAAZ,KAAoB,QAA9B;AACA,MAAI,MAAM,OAAO,KAAK,GAAZ,KAAoB,QAA9B;AACA,MAAI,MAAM,OAAO,KAAK,GAAZ,KAAoB,QAA9B;AACA,MAAI,MAAM,KAAV;AACA,MAAI,MAAM,IAAV;AACA,MAAI,MAAM,OAAO,KAAP,KAAiB,QAA3B;AACA,MAAI,MAAM,OAAO,KAAP,KAAiB,QAA3B;AACA,MAAI,MAAM,MAAM,OAAN,CAAc,KAAd,CAAV;AACA,MAAI,GAAJ,EAAS;AACP,UAAM,QAAN;AACD,GAFD,MAEO,IAAI,GAAJ,EAAS;AACd,UAAM,QAAN;AACD,GAFM,MAEA,IAAI,GAAJ,EAAS;AACd,UAAM,OAAN;AACD;AACD;AACA;AACA;AACA,MAAI,CAAC,GAAL,EAAU;AACR,WAAO,KAAP;AACD;AACD,MAAI,OAAO,GAAX,EAAgB;AACd,UAAM,MAAM,MAAZ;AACD;AACD,MAAI,GAAJ,EAAS;AACP,QAAI,QAAQ,KAAK,GAAjB,EAAsB;AACpB,aAAO,IAAP,CAAY,KAAK,MAAL,CAAY,QAAQ,QAAR,CAAiB,GAAjB,EAAsB,GAAlC,EAAuC,KAAK,SAA5C,EAAuD,KAAK,GAA5D,CAAZ;AACD;AACF,GAJD,MAIO,IAAI,OAAO,CAAC,GAAR,IAAe,MAAM,KAAK,GAA9B,EAAmC;AACxC,WAAO,IAAP,CAAY,KAAK,MAAL,CAAY,QAAQ,QAAR,CAAiB,GAAjB,EAAsB,GAAlC,EAAuC,KAAK,SAA5C,EAAuD,KAAK,GAA5D,CAAZ;AACD,GAFM,MAEA,IAAI,OAAO,CAAC,GAAR,IAAe,MAAM,KAAK,GAA9B,EAAmC;AACxC,WAAO,IAAP,CAAY,KAAK,MAAL,CAAY,QAAQ,QAAR,CAAiB,GAAjB,EAAsB,GAAlC,EAAuC,KAAK,SAA5C,EAAuD,KAAK,GAA5D,CAAZ;AACD,GAFM,MAEA,IAAI,OAAO,GAAP,KAAe,MAAM,KAAK,GAAX,IAAkB,MAAM,KAAK,GAA5C,CAAJ,EAAsD;AAC3D,WAAO,IAAP,CAAY,KAAK,MAAL,CAAY,QAAQ,QAAR,CAAiB,GAAjB,EAAsB,KAAlC,EAAyC,KAAK,SAA9C,EAAyD,KAAK,GAA9D,EAAmE,KAAK,GAAxE,CAAZ;AACD;AACF;;AAED,QAAQ,SAAR,IAAqB,KAArB;AACA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"range-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction range(rule, value, source, errors, options) {\n  var len = typeof rule.len === 'number';\n  var min = typeof rule.min === 'number';\n  var max = typeof rule.max === 'number';\n  var val = value;\n  var key = null;\n  var num = typeof value === 'number';\n  var str = typeof value === 'string';\n  var arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (str || arr) {\n    val = value.length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(util.format(options.messages[key].range, rule.fullField, rule.min, rule.max));\n  }\n}\n\nexports[\"default\"] = range;\nmodule.exports = exports['default'];"]}