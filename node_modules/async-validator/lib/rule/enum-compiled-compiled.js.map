{"version":3,"sources":["enum-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,SAAO;AADoC,CAA7C;;AAIA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;;AAEA,IAAI,OAAO,wBAAwB,KAAxB,CAAX;;AAEA,SAAS,uBAAT,CAAiC,GAAjC,EAAsC;AACpC,MAAI,OAAO,IAAI,UAAf,EAA2B;AACzB,WAAO,GAAP;AACD,GAFD,MAEO;AACL,QAAI,SAAS,EAAb,CAAgB,IAAI,OAAO,IAAX,EAAiB;AAC/B,WAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AACnB,YAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,GAA1C,CAAJ,EAAoD,OAAO,GAAP,IAAc,IAAI,GAAJ,CAAd;AACrD;AACF,YAAO,SAAP,IAAoB,GAApB,CAAwB,OAAO,MAAP;AAC1B;AACF;;AAED,IAAI,OAAO,MAAX;;AAEA;;;;;;;;;;;AAWA,SAAS,UAAT,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,OAAjD,EAA0D;AACxD,OAAK,IAAL,IAAa,MAAM,OAAN,CAAc,KAAK,IAAL,CAAd,IAA4B,KAAK,IAAL,CAA5B,GAAyC,EAAtD;AACA,MAAI,KAAK,IAAL,EAAW,OAAX,CAAmB,KAAnB,MAA8B,CAAC,CAAnC,EAAsC;AACpC,WAAO,IAAP,CAAY,KAAK,MAAL,CAAY,QAAQ,QAAR,CAAiB,IAAjB,CAAZ,EAAoC,KAAK,SAAzC,EAAoD,KAAK,IAAL,EAAW,IAAX,CAAgB,IAAhB,CAApD,CAAZ;AACD;AACF;;AAED,QAAQ,SAAR,IAAqB,UAArB;AACA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB;;AAEA","file":"enum-compiled-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj[\"default\"] = obj;return newObj;\n  }\n}\n\nvar ENUM = 'enum';\n\n/**\n *  Rule for validating a value exists in an enumerable list.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction enumerable(rule, value, source, errors, options) {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(util.format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));\n  }\n}\n\nexports[\"default\"] = enumerable;\nmodule.exports = exports['default'];\n\n//# sourceMappingURL=enum-compiled.js.map"]}