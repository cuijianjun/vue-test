{"version":3,"sources":["migrating.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA,eAAe;AACb,SADa,qBACH;AACR,QAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AAC3C,QAAI,CAAC,KAAK,MAAV,EAAkB;;AAFV,8BAGkB,KAAK,kBAAL,EAHlB;AAAA,QAGA,KAHA,uBAGA,KAHA;AAAA,QAGO,MAHP,uBAGO,MAHP;;AAAA,kBAI2B,KAAK,MAJhC;AAAA,QAIA,IAJA,WAIA,IAJA;AAAA,QAIM,gBAJN,WAIM,gBAJN;;AAKR,QAAM,eAAe,KAAK,KAAL,IAAc,EAAnC;AACA,QAAM,gBAAgB,iBAAiB,SAAjB,IAA8B,EAApD;;AAEA,SAAK,IAAI,QAAT,IAAqB,YAArB,EAAmC;AACjC,UAAI,aAAa,cAAb,CAA4B,QAA5B,KAAyC,MAAM,QAAN,CAA7C,EAA8D;AAC5D,gBAAQ,IAAR,sCAAgD,MAAM,QAAN,CAAhD;AACD;AACF;;AAED,SAAK,IAAI,SAAT,IAAsB,aAAtB,EAAqC;AACnC,UAAI,cAAc,cAAd,CAA6B,SAA7B,KAA2C,OAAO,SAAP,CAA/C,EAAkE;AAChE,gBAAQ,IAAR,kCAA4C,OAAO,SAAP,CAA5C;AACD;AACF;AACF,GApBY;;AAqBb,WAAS;AACP,sBADO,gCACc;AACnB,aAAO;AACL,eAAO,EADF;AAEL,gBAAQ;AAFH,OAAP;AAID;AANM;AArBI,CAAf","file":"migrating-compiled.js","sourcesContent":["/**\n * Show migrating guide in browser console.\n *\n * Usage:\n * import Migrating from 'element-ui/src/mixins/migrating';\n *\n * mixins: [Migrating]\n *\n * add getMigratingConfig method for your component.\n *  getMigratingConfig() {\n *    return {\n *      props: {\n *        'allow-no-selection': 'allow-no-selection is removed.',\n *        'selection-mode': 'selection-mode is removed.'\n *      },\n *      events: {\n *        selectionchange: 'selectionchange is renamed to selection-change.'\n *      }\n *    };\n *  },\n */\nexport default {\n  mounted() {\n    if (process.env.NODE_ENV === 'production') return;\n    if (!this.$vnode) return;\n    const { props, events } = this.getMigratingConfig();\n    const { data, componentOptions } = this.$vnode;\n    const definedProps = data.attrs || {};\n    const definedEvents = componentOptions.listeners || {};\n\n    for (let propName in definedProps) {\n      if (definedProps.hasOwnProperty(propName) && props[propName]) {\n        console.warn(`[Element Migrating][Attribute]: ${props[propName]}`);\n      }\n    }\n\n    for (let eventName in definedEvents) {\n      if (definedEvents.hasOwnProperty(eventName) && events[eventName]) {\n        console.warn(`[Element Migrating][Event]: ${events[eventName]}`);\n      }\n    }\n  },\n  methods: {\n    getMigratingConfig() {\n      return {\n        props: {},\n        events: {}\n      };\n    }\n  }\n};\n"]}