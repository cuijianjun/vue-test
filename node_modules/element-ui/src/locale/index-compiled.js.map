{"version":3,"sources":["index.js"],"names":[],"mappings":";AAAA,OAAO,WAAP,MAAwB,kCAAxB;AACA,OAAO,GAAP,MAAgB,KAAhB;AACA,OAAO,SAAP,MAAsB,WAAtB;AACA,OAAO,MAAP,MAAmB,UAAnB;;AAEA,IAAM,SAAS,OAAO,GAAP,CAAf;AACA,IAAI,OAAO,WAAX;AACA,IAAI,SAAS,KAAb;AACA,IAAI,cAAc,uBAAW;AAC3B,MAAM,UAAU,uBAAsB,QAAQ,GAA9B,EAAmC,EAAnD;AACA,MAAI,OAAO,OAAP,KAAmB,UAAnB,IAAiC,CAAC,CAAC,IAAI,MAA3C,EAAmD;AACjD,QAAI,CAAC,MAAL,EAAa;AACX,eAAS,IAAT;AACA,UAAI,MAAJ,CACE,IAAI,MAAJ,CAAW,IADb,EAEE,UAAU,IAAV,EAAgB,IAAI,MAAJ,CAAW,IAAI,MAAJ,CAAW,IAAtB,KAA+B,EAA/C,EAAmD,EAAE,OAAO,IAAT,EAAnD,CAFF;AAID;AACD,WAAO,QAAQ,KAAR,CAAc,IAAd,EAAoB,SAApB,CAAP;AACD;AACF,CAZD;;AAcA,OAAO,IAAM,IAAI,SAAJ,CAAI,CAAS,IAAT,EAAe,OAAf,EAAwB;AACvC,MAAI,QAAQ,YAAY,KAAZ,CAAkB,IAAlB,EAAwB,SAAxB,CAAZ;AACA,MAAI,UAAU,IAAV,IAAkB,UAAU,SAAhC,EAA2C,OAAO,KAAP;;AAE3C,MAAM,QAAQ,KAAK,KAAL,CAAW,GAAX,CAAd;AACA,MAAI,UAAU,IAAd;;AAEA,OAAK,IAAI,IAAI,CAAR,EAAW,IAAI,MAAM,MAA1B,EAAkC,IAAI,CAAtC,EAAyC,GAAzC,EAA8C;AAC5C,QAAM,WAAW,MAAM,CAAN,CAAjB;AACA,YAAQ,QAAQ,QAAR,CAAR;AACA,QAAI,MAAM,IAAI,CAAd,EAAiB,OAAO,OAAO,KAAP,EAAc,OAAd,CAAP;AACjB,QAAI,CAAC,KAAL,EAAY,OAAO,EAAP;AACZ,cAAU,KAAV;AACD;AACD,SAAO,EAAP;AACD,CAfM;;AAiBP,OAAO,IAAM,MAAM,SAAN,GAAM,CAAS,CAAT,EAAY;AAC7B,SAAO,KAAK,IAAZ;AACD,CAFM;;AAIP,OAAO,IAAM,OAAO,SAAP,IAAO,CAAS,EAAT,EAAa;AAC/B,gBAAc,MAAM,WAApB;AACD,CAFM;;AAIP,eAAe,EAAE,QAAF,EAAO,IAAP,EAAU,UAAV,EAAf","file":"index-compiled.js","sourcesContent":["import defaultLang from 'element-ui/src/locale/lang/zh-CN';\nimport Vue from 'vue';\nimport deepmerge from 'deepmerge';\nimport Format from './format';\n\nconst format = Format(Vue);\nlet lang = defaultLang;\nlet merged = false;\nlet i18nHandler = function() {\n  const vuei18n = Object.getPrototypeOf(this || Vue).$t;\n  if (typeof vuei18n === 'function' && !!Vue.locale) {\n    if (!merged) {\n      merged = true;\n      Vue.locale(\n        Vue.config.lang,\n        deepmerge(lang, Vue.locale(Vue.config.lang) || {}, { clone: true })\n      );\n    }\n    return vuei18n.apply(this, arguments);\n  }\n};\n\nexport const t = function(path, options) {\n  let value = i18nHandler.apply(this, arguments);\n  if (value !== null && value !== undefined) return value;\n\n  const array = path.split('.');\n  let current = lang;\n\n  for (let i = 0, j = array.length; i < j; i++) {\n    const property = array[i];\n    value = current[property];\n    if (i === j - 1) return format(value, options);\n    if (!value) return '';\n    current = value;\n  }\n  return '';\n};\n\nexport const use = function(l) {\n  lang = l || lang;\n};\n\nexport const i18n = function(fn) {\n  i18nHandler = fn || i18nHandler;\n};\n\nexport default { use, t, i18n };\n"]}