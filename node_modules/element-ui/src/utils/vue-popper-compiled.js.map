{"version":3,"sources":["vue-popper.js"],"names":[],"mappings":"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","file":"vue-popper-compiled.js","sourcesContent":["import Vue from 'vue';\nimport {\n  PopupManager\n} from 'element-ui/src/utils/popup';\n\nconst PopperJS = Vue.prototype.$isServer ? function() {} : require('./popper');\nconst stop = e => e.stopPropagation();\n\n/**\n * @param {HTMLElement} [reference=$refs.reference] - The reference element used to position the popper.\n * @param {HTMLElement} [popper=$refs.popper] - The HTML element used as popper, or a configuration used to generate the popper.\n * @param {String} [placement=button] - Placement of the popper accepted values: top(-start, -end), right(-start, -end), bottom(-start, -end), left(-start, -end)\n * @param {Number} [offset=0] - Amount of pixels the popper will be shifted (can be negative).\n * @param {Boolean} [visible=false] Visibility of the popup element.\n * @param {Boolean} [visible-arrow=false] Visibility of the arrow, no style.\n */\nexport default {\n  props: {\n    placement: {\n      type: String,\n      default: 'bottom'\n    },\n    boundariesPadding: {\n      type: Number,\n      default: 5\n    },\n    reference: {},\n    popper: {},\n    offset: {\n      default: 0\n    },\n    value: Boolean,\n    visibleArrow: Boolean,\n    transition: String,\n    appendToBody: {\n      type: Boolean,\n      default: true\n    },\n    popperOptions: {\n      type: Object,\n      default() {\n        return {\n          gpuAcceleration: false\n        };\n      }\n    }\n  },\n\n  data() {\n    return {\n      showPopper: false,\n      currentPlacement: ''\n    };\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler(val) {\n        this.showPopper = val;\n        this.$emit('input', val);\n      }\n    },\n\n    showPopper(val) {\n      val ? this.updatePopper() : this.destroyPopper();\n      this.$emit('input', val);\n    }\n  },\n\n  methods: {\n    createPopper() {\n      if (this.$isServer) return;\n      this.currentPlacement = this.currentPlacement || this.placement;\n      if (!/^(top|bottom|left|right)(-start|-end)?$/g.test(this.currentPlacement)) {\n        return;\n      }\n\n      const options = this.popperOptions;\n      const popper = this.popperElm = this.popperElm || this.popper || this.$refs.popper;\n      let reference = this.referenceElm = this.referenceElm || this.reference || this.$refs.reference;\n\n      if (!reference &&\n        this.$slots.reference &&\n        this.$slots.reference[0]) {\n        reference = this.referenceElm = this.$slots.reference[0].elm;\n      }\n\n      if (!popper || !reference) return;\n      if (this.visibleArrow) this.appendArrow(popper);\n      if (this.appendToBody) document.body.appendChild(this.popperElm);\n      if (this.popperJS && this.popperJS.destroy) {\n        this.popperJS.destroy();\n      }\n\n      options.placement = this.currentPlacement;\n      options.offset = this.offset;\n      this.popperJS = new PopperJS(reference, popper, options);\n      this.popperJS.onCreate(_ => {\n        this.$emit('created', this);\n        this.resetTransformOrigin();\n        this.$nextTick(this.updatePopper);\n      });\n      if (typeof options.onUpdate === 'function') {\n        this.popperJS.onUpdate(options.onUpdate);\n      }\n      this.popperJS._popper.style.zIndex = PopupManager.nextZIndex();\n      this.popperElm.addEventListener('click', stop);\n    },\n\n    updatePopper() {\n      this.popperJS ? this.popperJS.update() : this.createPopper();\n    },\n\n    doDestroy() {\n      /* istanbul ignore if */\n      if (this.showPopper || !this.popperJS) return;\n      this.popperJS.destroy();\n      this.popperJS = null;\n    },\n\n    destroyPopper() {\n      if (this.popperJS) {\n        this.resetTransformOrigin();\n      }\n    },\n\n    resetTransformOrigin() {\n      let placementMap = {\n        top: 'bottom',\n        bottom: 'top',\n        left: 'right',\n        right: 'left'\n      };\n      let placement = this.popperJS._popper.getAttribute('x-placement').split('-')[0];\n      let origin = placementMap[placement];\n      this.popperJS._popper.style.transformOrigin = ['top', 'bottom'].indexOf(placement) > -1 ? `center ${ origin }` : `${ origin } center`;\n    },\n\n    appendArrow(element) {\n      let hash;\n      if (this.appended) {\n        return;\n      }\n\n      this.appended = true;\n\n      for (let item in element.attributes) {\n        if (/^_v-/.test(element.attributes[item].name)) {\n          hash = element.attributes[item].name;\n          break;\n        }\n      }\n\n      const arrow = document.createElement('div');\n\n      if (hash) {\n        arrow.setAttribute(hash, '');\n      }\n      arrow.setAttribute('x-arrow', '');\n      arrow.className = 'popper__arrow';\n      element.appendChild(arrow);\n    }\n  },\n\n  beforeDestroy() {\n    this.doDestroy();\n    if (this.popperElm && this.popperElm.parentNode === document.body) {\n      this.popperElm.removeEventListener('click', stop);\n      document.body.removeChild(this.popperElm);\n    }\n  },\n\n  // call destroy in keep-alive mode\n  deactivated() {\n    this.$options.beforeDestroy[0].call(this);\n  }\n};\n"]}