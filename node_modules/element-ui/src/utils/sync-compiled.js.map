{"version":3,"sources":["sync.js"],"names":[],"mappings":";AAAA,IAAM,iBAAiB,SAAvB;;AAEA;;;;;;;;;AASA,eAAe;AACb,MADa,gBACR,EADQ,EACJ,OADI,EACK,KADL,EACY;AACvB,QAAM,UAAU,MAAM,OAAtB;AACA,QAAM,YAAY,MAAM,KAAxB;AACA,QAAM,aAAa,QAAQ,UAA3B;AACA,QAAM,OAAO,QAAQ,GAArB;;AAEA,QAAI,CAAC,UAAD,IAAe,CAAC,IAApB,EAA0B;AACxB,cAAQ,IAAR,CAAa,iFAAb;AACA;AACD;;AAED,QAAI,CAAC,SAAD,IAAc,CAAC,UAAU,MAA7B,EAAqC;AACnC,cAAQ,IAAR,CAAa,2CAAb;AACA;AACD;;AAED,QAAM,iBAAiB,QAAQ,MAAR,CAAe,UAAf,EAA2B,UAAC,GAAD,EAAS;AACzD,gBAAU,IAAV,IAAkB,GAAlB;AACD,KAFsB,CAAvB;;AAIA,QAAM,mBAAmB,UAAU,MAAV,CAAiB,IAAjB,EAAuB,UAAC,GAAD,EAAS;AACvD,cAAQ,UAAR,IAAsB,GAAtB;AACD,KAFwB,CAAzB;;AAIA,2BAAsB,SAAtB,EAAiC,cAAjC,EAAiD;AAC/C,aAAO;AACL,sCADK;AAEL;AAFK,OADwC;AAK/C,kBAAY;AALmC,KAAjD;AAOD,GAhCY;AAkCb,QAlCa,kBAkCN,EAlCM,EAkCF,OAlCE,EAkCO,KAlCP,EAkCc;AACzB,QAAM,YAAY,MAAM,KAAxB;AACA,QAAI,aAAa,UAAU,cAAV,CAAjB,EAA4C;AAAA,kCACG,UAAU,cAAV,CADH;AAAA,UAClC,cADkC,yBAClC,cADkC;AAAA,UAClB,gBADkB,yBAClB,gBADkB;;AAE1C,wBAAkB,gBAAlB;AACA,0BAAoB,kBAApB;AACD;AACF;AAzCY,CAAf","file":"sync-compiled.js","sourcesContent":["const SYNC_HOOK_PROP = '$v-sync';\n\n/**\n * v-sync directive\n *\n * Usage:\n *  v-sync:component-prop=\"context prop name\"\n *\n * If your want to sync component's prop \"visible\" to context prop \"myVisible\", use like this:\n *  v-sync:visible=\"myVisible\"\n */\nexport default {\n  bind(el, binding, vnode) {\n    const context = vnode.context;\n    const component = vnode.child;\n    const expression = binding.expression;\n    const prop = binding.arg;\n\n    if (!expression || !prop) {\n      console.warn('v-sync should specify arg & expression, for example: v-sync:visible=\"myVisible\"');\n      return;\n    }\n\n    if (!component || !component.$watch) {\n      console.warn('v-sync is only available on Vue Component');\n      return;\n    }\n\n    const unwatchContext = context.$watch(expression, (val) => {\n      component[prop] = val;\n    });\n\n    const unwatchComponent = component.$watch(prop, (val) => {\n      context[expression] = val;\n    });\n\n    Object.defineProperty(component, SYNC_HOOK_PROP, {\n      value: {\n        unwatchContext,\n        unwatchComponent\n      },\n      enumerable: false\n    });\n  },\n\n  unbind(el, binding, vnode) {\n    const component = vnode.child;\n    if (component && component[SYNC_HOOK_PROP]) {\n      const { unwatchContext, unwatchComponent } = component[SYNC_HOOK_PROP];\n      unwatchContext && unwatchContext();\n      unwatchComponent && unwatchComponent();\n    }\n  }\n};\n"]}