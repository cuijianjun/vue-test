{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA,OAAO,GAAP,MAAgB,KAAhB;AACA,SAAS,YAAT,QAA6B,4BAA7B;AACA,SAAS,OAAT,QAAwB,2BAAxB;AACA,IAAI,qBAAqB,IAAI,MAAJ,CAAW,QAAQ,YAAR,CAAX,CAAzB;;AAEA,IAAI,iBAAJ;AACA,IAAI,YAAY,EAAhB;AACA,IAAI,OAAO,CAAX;;AAEA,IAAI,UAAU,SAAV,OAAU,CAAS,OAAT,EAAkB;AAC9B,MAAI,IAAI,SAAJ,CAAc,SAAlB,EAA6B;AAC7B,YAAU,WAAW,EAArB;AACA,MAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,cAAU;AACR,eAAS;AADD,KAAV;AAGD;AACD,MAAI,cAAc,QAAQ,OAA1B;AACA,MAAI,KAAK,aAAa,MAAtB;;AAEA,UAAQ,OAAR,GAAkB,YAAW;AAC3B,YAAQ,KAAR,CAAc,EAAd,EAAkB,WAAlB;AACD,GAFD;AAGA,aAAW,IAAI,kBAAJ,CAAuB;AAChC,UAAM;AAD0B,GAAvB,CAAX;AAGA,WAAS,EAAT,GAAc,EAAd;AACA,MAAI,QAAQ,SAAS,OAAjB,CAAJ,EAA+B;AAC7B,aAAS,MAAT,CAAgB,OAAhB,GAA0B,CAAC,SAAS,OAAV,CAA1B;AACA,aAAS,OAAT,GAAmB,IAAnB;AACD;AACD,WAAS,EAAT,GAAc,SAAS,MAAT,EAAd;AACA,WAAS,IAAT,CAAc,WAAd,CAA0B,SAAS,EAAT,CAAY,GAAtC;AACA,WAAS,EAAT,CAAY,OAAZ,GAAsB,IAAtB;AACA,WAAS,GAAT,GAAe,SAAS,EAAT,CAAY,GAA3B;AACA,WAAS,GAAT,CAAa,KAAb,CAAmB,MAAnB,GAA4B,aAAa,UAAb,EAA5B;AACA,YAAU,IAAV,CAAe,QAAf;AACA,SAAO,SAAS,EAAhB;AACD,CA7BD;;AA+BA,CAAC,SAAD,EAAY,SAAZ,EAAuB,MAAvB,EAA+B,OAA/B,EAAwC,OAAxC,CAAgD,gBAAQ;AACtD,UAAQ,IAAR,IAAgB,mBAAW;AACzB,QAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,gBAAU;AACR,iBAAS;AADD,OAAV;AAGD;AACD,YAAQ,IAAR,GAAe,IAAf;AACA,WAAO,QAAQ,OAAR,CAAP;AACD,GARD;AASD,CAVD;;AAYA,QAAQ,KAAR,GAAgB,UAAS,EAAT,EAAa,WAAb,EAA0B;AACxC,OAAK,IAAI,IAAI,CAAR,EAAW,MAAM,UAAU,MAAhC,EAAwC,IAAI,GAA5C,EAAiD,GAAjD,EAAsD;AACpD,QAAI,OAAO,UAAU,CAAV,EAAa,EAAxB,EAA4B;AAC1B,UAAI,OAAO,WAAP,KAAuB,UAA3B,EAAuC;AACrC,oBAAY,UAAU,CAAV,CAAZ;AACD;AACD,gBAAU,MAAV,CAAiB,CAAjB,EAAoB,CAApB;AACA;AACD;AACF;AACF,CAVD;;AAYA,QAAQ,QAAR,GAAmB,YAAW;AAC5B,OAAK,IAAI,IAAI,UAAU,MAAV,GAAmB,CAAhC,EAAmC,KAAK,CAAxC,EAA2C,GAA3C,EAAgD;AAC9C,cAAU,CAAV,EAAa,KAAb;AACD;AACF,CAJD;;AAMA,eAAe,OAAf","file":"main-compiled.js","sourcesContent":["import Vue from 'vue';\nimport { PopupManager } from 'element-ui/src/utils/popup';\nimport { isVNode } from 'element-ui/src/utils/vdom';\nlet MessageConstructor = Vue.extend(require('./main.vue'));\n\nlet instance;\nlet instances = [];\nlet seed = 1;\n\nvar Message = function(options) {\n  if (Vue.prototype.$isServer) return;\n  options = options || {};\n  if (typeof options === 'string') {\n    options = {\n      message: options\n    };\n  }\n  let userOnClose = options.onClose;\n  let id = 'message_' + seed++;\n\n  options.onClose = function() {\n    Message.close(id, userOnClose);\n  };\n  instance = new MessageConstructor({\n    data: options\n  });\n  instance.id = id;\n  if (isVNode(instance.message)) {\n    instance.$slots.default = [instance.message];\n    instance.message = null;\n  }\n  instance.vm = instance.$mount();\n  document.body.appendChild(instance.vm.$el);\n  instance.vm.visible = true;\n  instance.dom = instance.vm.$el;\n  instance.dom.style.zIndex = PopupManager.nextZIndex();\n  instances.push(instance);\n  return instance.vm;\n};\n\n['success', 'warning', 'info', 'error'].forEach(type => {\n  Message[type] = options => {\n    if (typeof options === 'string') {\n      options = {\n        message: options\n      };\n    }\n    options.type = type;\n    return Message(options);\n  };\n});\n\nMessage.close = function(id, userOnClose) {\n  for (let i = 0, len = instances.length; i < len; i++) {\n    if (id === instances[i].id) {\n      if (typeof userOnClose === 'function') {\n        userOnClose(instances[i]);\n      }\n      instances.splice(i, 1);\n      break;\n    }\n  }\n};\n\nMessage.closeAll = function() {\n  for (let i = instances.length - 1; i >= 0; i--) {\n    instances[i].close();\n  }\n};\n\nexport default Message;\n"]}