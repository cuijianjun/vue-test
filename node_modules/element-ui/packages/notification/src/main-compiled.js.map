{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["import Vue from 'vue';\nimport { PopupManager } from 'element-ui/src/utils/popup';\nimport { isVNode } from 'element-ui/src/utils/vdom';\nlet NotificationConstructor = Vue.extend(require('./main.vue'));\n\nlet instance;\nlet instances = [];\nlet seed = 1;\n\nvar Notification = function(options) {\n  if (Vue.prototype.$isServer) return;\n  options = options || {};\n  let userOnClose = options.onClose;\n  let id = 'notification_' + seed++;\n\n  options.onClose = function() {\n    Notification.close(id, userOnClose);\n  };\n\n  instance = new NotificationConstructor({\n    data: options\n  });\n\n  if (isVNode(options.message)) {\n    instance.$slots.default = [options.message];\n    options.message = '';\n  }\n  instance.id = id;\n  instance.vm = instance.$mount();\n  document.body.appendChild(instance.vm.$el);\n  instance.vm.visible = true;\n  instance.dom = instance.vm.$el;\n  instance.dom.style.zIndex = PopupManager.nextZIndex();\n\n  const offset = options.offset || 0;\n  let topDist = offset;\n  for (let i = 0, len = instances.length; i < len; i++) {\n    topDist += instances[i].$el.offsetHeight + 16;\n  }\n  topDist += 16;\n  instance.top = topDist;\n  instances.push(instance);\n  return instance.vm;\n};\n\n['success', 'warning', 'info', 'error'].forEach(type => {\n  Notification[type] = options => {\n    if (typeof options === 'string' || isVNode(options)) {\n      options = {\n        message: options\n      };\n    }\n    options.type = type;\n    return Notification(options);\n  };\n});\n\nNotification.close = function(id, userOnClose) {\n  let index;\n  let removedHeight;\n  for (var i = 0, len = instances.length; i < len; i++) {\n    if (id === instances[i].id) {\n      if (typeof userOnClose === 'function') {\n        userOnClose(instances[i]);\n      }\n      index = i;\n      removedHeight = instances[i].dom.offsetHeight;\n      instances.splice(i, 1);\n      break;\n    }\n  }\n\n  if (len > 1) {\n    for (i = index; i < len - 1 ; i++) {\n      instances[i].dom.style.top = parseInt(instances[i].dom.style.top, 10) - removedHeight - 16 + 'px';\n    }\n  }\n};\n\nexport default Notification;\n"]}