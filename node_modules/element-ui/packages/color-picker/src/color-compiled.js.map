{"version":3,"sources":["color.js"],"names":[],"mappings":"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","file":"color-compiled.js","sourcesContent":["const hsv2hsl = function(hue, sat, val) {\n  return [\n    hue,\n    (sat * val / ((hue = (2 - sat) * val) < 1 ? hue : 2 - hue)) || 0,\n    hue / 2\n  ];\n};\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nconst isOnePointZero = function(n) {\n  return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n};\n\nconst isPercentage = function(n) {\n  return typeof n === 'string' && n.indexOf('%') !== -1;\n};\n\n// Take input from [0, n] and return it as [0, 1]\nconst bound01 = function(value, max) {\n  if (isOnePointZero(value)) value = '100%';\n\n  const processPercent = isPercentage(value);\n  value = Math.min(max, Math.max(0, parseFloat(value)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    value = parseInt(value * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if ((Math.abs(value - max) < 0.000001)) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn't already\n  return (value % max) / parseFloat(max);\n};\n\nconst INT_HEX_MAP = { 10: 'A', 11: 'B', 12: 'C', 13: 'D', 14: 'E', 15: 'F' };\n\nconst toHex = function({ r, g, b }) {\n  const hexOne = function(value) {\n    value = Math.min(Math.round(value), 255);\n    const high = Math.floor(value / 16);\n    const low = value % 16;\n    return '' + (INT_HEX_MAP[high] || high) + (INT_HEX_MAP[low] || low);\n  };\n\n  if (isNaN(r) || isNaN(g) || isNaN(b)) return '';\n\n  return '#' + hexOne(r) + hexOne(g) + hexOne(b);\n};\n\nconst HEX_INT_MAP = { A: 10, B: 11, C: 12, D: 13, E: 14, F: 15 };\n\nconst parseHexChannel = function(hex) {\n  if (hex.length === 2) {\n    return (HEX_INT_MAP[hex[0].toUpperCase()] || +hex[0]) * 16 + (HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1]);\n  }\n\n  return HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1];\n};\n\nconst hsl2hsv = function(hue, sat, light) {\n  sat = sat / 100;\n  light = light / 100;\n  let smin = sat;\n  const lmin = Math.max(light, 0.01);\n  let sv;\n  let v;\n\n  light *= 2;\n  sat *= (light <= 1) ? light : 2 - light;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  v = (light + sat) / 2;\n  sv = light === 0 ? (2 * smin) / (lmin + smin) : (2 * sat) / (light + sat);\n\n  return {\n    h: hue,\n    s: sv * 100,\n    v: v * 100\n  };\n};\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nconst rgb2hsv = function(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h, s;\n  let v = max;\n\n  const d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max === min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return { h: h * 360, s: s * 100, v: v * 100 };\n};\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nconst hsv2rgb = function(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n\n  const i = Math.floor(h);\n  const f = h - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  const mod = i % 6;\n  const r = [v, q, p, p, t, v][mod];\n  const g = [t, v, v, q, p, p][mod];\n  const b = [p, p, t, v, v, q][mod];\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n};\n\nexport default class Color {\n  constructor(options) {\n    this._hue = 0;\n    this._saturation = 100;\n    this._value = 100;\n    this._alpha = 100;\n\n    this.enableAlpha = false;\n    this.format = 'hex';\n    this.value = '';\n\n    options = options || {};\n\n    for (let option in options) {\n      if (options.hasOwnProperty(option)) {\n        this[option] = options[option];\n      }\n    }\n\n    this.doOnChange();\n  }\n\n  set(prop, value) {\n    if (arguments.length === 1 && typeof prop === 'object') {\n      for (let p in prop) {\n        if (prop.hasOwnProperty(p)) {\n          this.set(p, prop[p]);\n        }\n      }\n\n      return;\n    }\n\n    this['_' + prop] = value;\n    this.doOnChange();\n  }\n\n  get(prop) {\n    return this['_' + prop];\n  }\n\n  toRgb() {\n    return hsv2rgb(this._hue, this._saturation, this._value);\n  }\n\n  fromString(value) {\n    if (!value) {\n      this._hue = 0;\n      this._saturation = 100;\n      this._value = 100;\n\n      this.doOnChange();\n      return;\n    }\n\n    const fromHSV = (h, s, v) => {\n      this._hue = h;\n      this._saturation = s;\n      this._value = v;\n\n      this.doOnChange();\n    };\n\n    if (value.indexOf('hsl') !== -1) {\n      const parts = value.replace(/hsla|hsl|\\(|\\)/gm, '')\n        .split(/\\s|,/g).filter((val) => val !== '').map((val, index) => index > 2 ? parseFloat(val) : parseInt(val, 10));\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      }\n      if (parts.length >= 3) {\n        const { h, s, v } = hsl2hsv(parts[0], parts[1], parts[2]);\n        fromHSV(h, s, v);\n      }\n    } else if (value.indexOf('hsv') !== -1) {\n      const parts = value.replace(/hsva|hsv|\\(|\\)/gm, '')\n        .split(/\\s|,/g).filter((val) => val !== '').map((val, index) => index > 2 ? parseFloat(val) : parseInt(val, 10));\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      }\n      if (parts.length >= 3) {\n        fromHSV(parts[0], parts[1], parts[2]);\n      }\n    } else if (value.indexOf('rgb') !== -1) {\n      const parts = value.replace(/rgba|rgb|\\(|\\)/gm, '')\n        .split(/\\s|,/g).filter((val) => val !== '').map((val, index) => index > 2 ? parseFloat(val) : parseInt(val, 10));\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      }\n      if (parts.length >= 3) {\n        const { h, s, v } = rgb2hsv(parts[0], parts[1], parts[2]);\n        fromHSV(h, s, v);\n      }\n    } else if (value.indexOf('#') !== -1) {\n      const hex = value.replace('#', '').trim();\n      let r, g, b;\n\n      if (hex.length === 3) {\n        r = parseHexChannel(hex[0] + hex[0]);\n        g = parseHexChannel(hex[1] + hex[1]);\n        b = parseHexChannel(hex[2] + hex[2]);\n      } else if (hex.length === 6) {\n        r = parseHexChannel(hex.substring(0, 2));\n        g = parseHexChannel(hex.substring(2, 4));\n        b = parseHexChannel(hex.substring(4));\n      }\n\n      const { h, s, v } = rgb2hsv(r, g, b);\n      fromHSV(h, s, v);\n    }\n  }\n\n  doOnChange() {\n    const { _hue, _saturation, _value, _alpha, format } = this;\n\n    if (this.enableAlpha) {\n      switch (format) {\n        case 'hsl':\n          const hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = `hsla(${ _hue }, ${ Math.round(hsl[1] * 100) }%, ${ Math.round(hsl[2] * 100) }%, ${ _alpha / 100})`;\n          break;\n        case 'hsv':\n          this.value = `hsva(${ _hue }, ${ Math.round(_saturation) }%, ${ Math.round(_value) }%, ${ _alpha / 100})`;\n          break;\n        default:\n          const { r, g, b } = hsv2rgb(_hue, _saturation, _value);\n          this.value = `rgba(${r}, ${g}, ${b}, ${ _alpha / 100 })`;\n      }\n    } else {\n      switch (format) {\n        case 'hsl':\n          const hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = `hsl(${ _hue }, ${ Math.round(hsl[1] * 100) }%, ${ Math.round(hsl[2] * 100) }%)`;\n          break;\n        case 'hsv':\n          this.value = `hsv(${ _hue }, ${ Math.round(_saturation) }%, ${ Math.round(_value) }%)`;\n          break;\n        case 'rgb':\n          const { r, g, b } = hsv2rgb(_hue, _saturation, _value);\n          this.value = `rgb(${r}, ${g}, ${b})`;\n          break;\n        default:\n          this.value = toHex(hsv2rgb(_hue, _saturation, _value));\n      }\n    }\n  }\n};\n"]}