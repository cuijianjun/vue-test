{"version":3,"sources":["table-layout.js"],"names":[],"mappings":"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","file":"table-layout-compiled.js","sourcesContent":["import scrollbarWidth from 'element-ui/src/utils/scrollbar-width';\n\nclass TableLayout {\n  constructor(options) {\n    this.table = null;\n    this.store = null;\n    this.columns = null;\n    this.fit = true;\n    this.showHeader = true;\n\n    this.height = null;\n    this.scrollX = false;\n    this.scrollY = false;\n    this.bodyWidth = null;\n    this.fixedWidth = null;\n    this.rightFixedWidth = null;\n    this.tableHeight = null;\n    this.headerHeight = 44; // Table Header Height\n    this.footerHeight = 44; // Table Footer Height\n    this.viewportHeight = null; // Table Height - Scroll Bar Height\n    this.bodyHeight = null; // Table Height - Table Header Height\n    this.fixedBodyHeight = null; // Table Height - Table Header Height - Scroll Bar Height\n    this.gutterWidth = scrollbarWidth();\n\n    for (let name in options) {\n      if (options.hasOwnProperty(name)) {\n        this[name] = options[name];\n      }\n    }\n\n    if (!this.table) {\n      throw new Error('table is required for Table Layout');\n    }\n    if (!this.store) {\n      throw new Error('store is required for Table Layout');\n    }\n  }\n\n  updateScrollY() {\n    const height = this.height;\n    if (typeof height !== 'string' && typeof height !== 'number') return;\n    const bodyWrapper = this.table.bodyWrapper;\n    if (this.table.$el && bodyWrapper) {\n      const body = bodyWrapper.querySelector('.el-table__body');\n      this.scrollY = body.offsetHeight > bodyWrapper.offsetHeight;\n    }\n  }\n\n  setHeight(value, prop = 'height') {\n    const el = this.table.$el;\n    if (typeof value === 'string' && /^\\d+$/.test(value)) {\n      value = Number(value);\n    }\n\n    this.height = value;\n\n    if (!el) return;\n    if (typeof value === 'number') {\n      el.style[prop] = value + 'px';\n\n      this.updateHeight();\n    } else if (typeof value === 'string') {\n      if (value === '') {\n        el.style[prop] = '';\n      }\n      this.updateHeight();\n    }\n  }\n\n  setMaxHeight(value) {\n    return this.setHeight(value, 'max-height');\n  }\n\n  updateHeight() {\n    const height = this.tableHeight = this.table.$el.clientHeight;\n    const noData = !this.table.data || this.table.data.length === 0;\n    const { headerWrapper, footerWrapper } = this.table.$refs;\n    const footerHeight = this.footerHeight = footerWrapper ? footerWrapper.offsetHeight : 0;\n    if (this.showHeader && !headerWrapper) return;\n    if (!this.showHeader) {\n      this.headerHeight = 0;\n      if (this.height !== null && (!isNaN(this.height) || typeof this.height === 'string')) {\n        this.bodyHeight = height - footerHeight + (footerWrapper ? 1 : 0);\n      }\n      this.fixedBodyHeight = this.scrollX ? height - this.gutterWidth : height;\n    } else {\n      const headerHeight = this.headerHeight = headerWrapper.offsetHeight;\n      const bodyHeight = height - headerHeight - footerHeight + (footerWrapper ? 1 : 0);\n      if (this.height !== null && (!isNaN(this.height) || typeof this.height === 'string')) {\n        this.bodyHeight = bodyHeight;\n      }\n      this.fixedBodyHeight = this.scrollX ? bodyHeight - this.gutterWidth : bodyHeight;\n    }\n    this.viewportHeight = this.scrollX ? height - (noData ? 0 : this.gutterWidth) : height;\n  }\n\n  update() {\n    const fit = this.fit;\n    const columns = this.table.columns;\n    const bodyWidth = this.table.$el.clientWidth;\n    let bodyMinWidth = 0;\n\n    const flattenColumns = [];\n    columns.forEach((column) => {\n      if (column.isColumnGroup) {\n        flattenColumns.push.apply(flattenColumns, column.columns);\n      } else {\n        flattenColumns.push(column);\n      }\n    });\n\n    let flexColumns = flattenColumns.filter((column) => typeof column.width !== 'number');\n\n    if (flexColumns.length > 0 && fit) {\n      flattenColumns.forEach((column) => {\n        bodyMinWidth += column.width || column.minWidth || 80;\n      });\n\n      if (bodyMinWidth < bodyWidth - this.gutterWidth) { // DON'T HAVE SCROLL BAR\n        this.scrollX = false;\n\n        const totalFlexWidth = bodyWidth - this.gutterWidth - bodyMinWidth;\n\n        if (flexColumns.length === 1) {\n          flexColumns[0].realWidth = (flexColumns[0].minWidth || 80) + totalFlexWidth;\n        } else {\n          const allColumnsWidth = flexColumns.reduce((prev, column) => prev + (column.minWidth || 80), 0);\n          const flexWidthPerPixel = totalFlexWidth / allColumnsWidth;\n          let noneFirstWidth = 0;\n\n          flexColumns.forEach((column, index) => {\n            if (index === 0) return;\n            const flexWidth = Math.floor((column.minWidth || 80) * flexWidthPerPixel);\n            noneFirstWidth += flexWidth;\n            column.realWidth = (column.minWidth || 80) + flexWidth;\n          });\n\n          flexColumns[0].realWidth = (flexColumns[0].minWidth || 80) + totalFlexWidth - noneFirstWidth;\n        }\n      } else { // HAVE HORIZONTAL SCROLL BAR\n        this.scrollX = true;\n        flexColumns.forEach(function(column) {\n          column.realWidth = column.minWidth;\n        });\n      }\n\n      this.bodyWidth = Math.max(bodyMinWidth, bodyWidth);\n    } else {\n      flattenColumns.forEach((column) => {\n        if (!column.width && !column.minWidth) {\n          column.realWidth = 80;\n        } else {\n          column.realWidth = column.width || column.minWidth;\n        }\n\n        bodyMinWidth += column.realWidth;\n      });\n      this.scrollX = bodyMinWidth > bodyWidth;\n\n      this.bodyWidth = bodyMinWidth;\n    }\n\n    const fixedColumns = this.store.states.fixedColumns;\n\n    if (fixedColumns.length > 0) {\n      let fixedWidth = 0;\n      fixedColumns.forEach(function(column) {\n        fixedWidth += column.realWidth;\n      });\n\n      this.fixedWidth = fixedWidth;\n    }\n\n    const rightFixedColumns = this.store.states.rightFixedColumns;\n    if (rightFixedColumns.length > 0) {\n      let rightFixedWidth = 0;\n      rightFixedColumns.forEach(function(column) {\n        rightFixedWidth += column.realWidth;\n      });\n\n      this.rightFixedWidth = rightFixedWidth;\n    }\n  }\n}\n\nexport default TableLayout;\n"]}