{"version":3,"sources":["index.js"],"names":[],"mappings":";AAAA;;;;;AAKA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,cAAc,QAAQ,cAAR,CAAlB;AACA,IAAI,kBAAkB,QAAQ,cAAR,CAAtB;;AAEA,OAAO,OAAP,GAAiB,YAAY,CAAE,CAA/B;;AAEA,OAAO,OAAP,CAAe,KAAf,GAAuB,UAAU,OAAV,EAAmB;AACzC,KAAI,KAAK,SAAT,EAAoB,KAAK,SAAL;;AAEpB,KAAI,UAAU,YAAY,UAAZ,CAAuB,IAAvB,KAAgC,EAA9C;;AAEA,iBAAgB,QAAQ,gBAAR,CAAhB,EAA2C,OAA3C,EAAoD,cAApD;;AAEA,QAAO,CACN,mEADM,EAEN,EAFM,EAGN,oBAHM,EAIN,2BAA2B,YAAY,gBAAZ,CAA6B,IAA7B,EAAmC,OAAO,OAA1C,CAA3B,GAAgF,IAJ1E,EAKN,uEALM,EAMN,8BANM,EAON,gBAPM,EAQN,QAAQ,SAAR,GAAoB,yBAAyB,YAAY,gBAAZ,CAA6B,IAA7B,EAAmC,MAAM,KAAK,OAAL,CAAa,QAAQ,SAArB,CAAzC,CAAzB,GAAqG,IAAzH,GAAgI,EAR1H,EASN,mBAAmB,gBAAe,OAAf,CATb,EAUN,+BAVM,EAWN,8BAXM,EAYN,0BAA0B,YAAY,gBAAZ,CAA6B,IAA7B,EAAmC,MAAM,KAAK,IAAL,CAAU,SAAV,EAAqB,KAArB,EAA4B,cAA5B,CAAzC,CAA1B,GAAkH,sBAZ5G,EAaN,qDAbM,EAcN,2BAdM,EAeN,kBAfM,EAgBN,qDAhBM,EAiBN,wBAjBM,EAkBN,yBAAyB,YAAY,gBAAZ,CAA6B,IAA7B,EAAmC,OAAO,OAA1C,CAAzB,GAA8E,gBAlBxE,EAmBN,iCAAiC,YAAY,gBAAZ,CAA6B,IAA7B,EAAmC,OAAO,OAA1C,CAAjC,GAAsF,IAnBhF,EAoBN,mFApBM,EAqBN,wBArBM,EAsBN,OAtBM,EAuBN,IAvBM,EAwBN,0DAxBM,EAyBN,gDAzBM,EA0BN,GA1BM,EA2BL,IA3BK,CA2BA,IA3BA,CAAP;AA4BA,CAnCD","file":"index-compiled.js","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar path = require(\"path\");\n\nvar loaderUtils = require(\"loader-utils\");\nvar validateOptions = require('schema-utils');\n\nmodule.exports = function () {};\n\nmodule.exports.pitch = function (request) {\n\tif (this.cacheable) this.cacheable();\n\n\tvar options = loaderUtils.getOptions(this) || {};\n\n\tvalidateOptions(require('./options.json'), options, 'Style Loader')\n\n\treturn [\n\t\t\"// style-loader: Adds some css to the DOM by adding a <style> tag\",\n\t\t\"\",\n\t\t\"// load the styles\",\n\t\t\"var content = require(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \");\",\n\t\t\"if(typeof content === 'string') content = [[module.id, content, '']];\",\n\t\t\"// Prepare cssTransformation\",\n\t\t\"var transform;\",\n\t\toptions.transform ? \"transform = require(\" + loaderUtils.stringifyRequest(this, \"!\" + path.resolve(options.transform)) + \");\" : \"\",\n\t\t\"var options = \" + JSON.stringify(options),\n\t\t\"options.transform = transform\",\n\t\t\"// add the styles to the DOM\",\n\t\t\"var update = require(\" + loaderUtils.stringifyRequest(this, \"!\" + path.join(__dirname, \"lib\", \"addStyles.js\")) + \")(content, options);\",\n\t\t\"if(content.locals) module.exports = content.locals;\",\n\t\t\"// Hot Module Replacement\",\n\t\t\"if(module.hot) {\",\n\t\t\"\t// When the styles change, update the <style> tags\",\n\t\t\"\tif(!content.locals) {\",\n\t\t\"\t\tmodule.hot.accept(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \", function() {\",\n\t\t\"\t\t\tvar newContent = require(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \");\",\n\t\t\"\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\",\n\t\t\"\t\t\tupdate(newContent);\",\n\t\t\"\t\t});\",\n\t\t\"\t}\",\n\t\t\"\t// When the module is disposed, remove the <style> tags\",\n\t\t\"\tmodule.hot.dispose(function() { update(); });\",\n\t\t\"}\"\n\t].join(\"\\n\");\n};\n"]}