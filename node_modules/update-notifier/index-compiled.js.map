{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\nvar spawn = require('child_process').spawn;\nvar path = require('path');\nvar format = require('util').format;\nvar lazyRequire = require('lazy-req')(require);\n\nvar configstore = lazyRequire('configstore');\nvar chalk = lazyRequire('chalk');\nvar semverDiff = lazyRequire('semver-diff');\nvar latestVersion = lazyRequire('latest-version');\nvar isNpm = lazyRequire('is-npm');\nvar boxen = lazyRequire('boxen');\nvar xdgBasedir = lazyRequire('xdg-basedir');\nvar ONE_DAY = 1000 * 60 * 60 * 24;\n\nfunction UpdateNotifier(options) {\n\tthis.options = options = options || {};\n\toptions.pkg = options.pkg || {};\n\n\t// reduce pkg to the essential keys. with fallback to deprecated options\n\t// TODO: remove deprecated options at some point far into the future\n\toptions.pkg = {\n\t\tname: options.pkg.name || options.packageName,\n\t\tversion: options.pkg.version || options.packageVersion\n\t};\n\n\tif (!options.pkg.name || !options.pkg.version) {\n\t\tthrow new Error('pkg.name and pkg.version required');\n\t}\n\n\tthis.packageName = options.pkg.name;\n\tthis.packageVersion = options.pkg.version;\n\tthis.updateCheckInterval = typeof options.updateCheckInterval === 'number' ? options.updateCheckInterval : ONE_DAY;\n\tthis.hasCallback = typeof options.callback === 'function';\n\tthis.callback = options.callback || function () {};\n\n\tif (!this.hasCallback) {\n\t\ttry {\n\t\t\tvar ConfigStore = configstore();\n\t\t\tthis.config = new ConfigStore('update-notifier-' + this.packageName, {\n\t\t\t\toptOut: false,\n\t\t\t\t// init with the current time so the first check is only\n\t\t\t\t// after the set interval, so not to bother users right away\n\t\t\t\tlastUpdateCheck: Date.now()\n\t\t\t});\n\t\t} catch (err) {\n\t\t\t// expecting error code EACCES or EPERM\n\t\t\tvar msg =\n\t\t\t\tchalk().yellow(format(' %s update check failed ', options.pkg.name)) +\n\t\t\t\tformat('\\n Try running with %s or get access ', chalk().cyan('sudo')) +\n\t\t\t\t'\\n to the local update config store via \\n' +\n\t\t\t\tchalk().cyan(format(' sudo chown -R $USER:$(id -gn $USER) %s ', xdgBasedir().config));\n\n\t\t\tprocess.on('exit', function () {\n\t\t\t\tconsole.error('\\n' + boxen()(msg, {align: 'center'}));\n\t\t\t});\n\t\t}\n\t}\n}\n\nUpdateNotifier.prototype.check = function () {\n\tif (this.hasCallback) {\n\t\tthis.checkNpm().then(this.callback.bind(this, null)).catch(this.callback);\n\t\treturn;\n\t}\n\tif (\n\t\t!this.config ||\n\t\tthis.config.get('optOut') ||\n\t\t'NO_UPDATE_NOTIFIER' in process.env ||\n\t\tprocess.argv.indexOf('--no-update-notifier') !== -1\n\t) {\n\t\treturn;\n\t}\n\n\tthis.update = this.config.get('update');\n\n\tif (this.update) {\n\t\tthis.config.del('update');\n\t}\n\n\t// Only check for updates on a set interval\n\tif (Date.now() - this.config.get('lastUpdateCheck') < this.updateCheckInterval) {\n\t\treturn;\n\t}\n\n\t// Spawn a detached process, passing the options as an environment property\n\tspawn(process.execPath, [path.join(__dirname, 'check.js'), JSON.stringify(this.options)], {\n\t\tdetached: true,\n\t\tstdio: 'ignore'\n\t}).unref();\n};\n\nUpdateNotifier.prototype.checkNpm = function () {\n\treturn latestVersion()(this.packageName).then(function (latestVersion) {\n\t\treturn {\n\t\t\tlatest: latestVersion,\n\t\t\tcurrent: this.packageVersion,\n\t\t\ttype: semverDiff()(this.packageVersion, latestVersion) || 'latest',\n\t\t\tname: this.packageName\n\t\t};\n\t}.bind(this));\n};\n\nUpdateNotifier.prototype.notify = function (opts) {\n\tif (!process.stdout.isTTY || isNpm() || !this.update) {\n\t\treturn this;\n\t}\n\n\topts = opts || {};\n\n\topts.message = opts.message || 'Update available ' + chalk().dim(this.update.current) + chalk().reset(' â†’ ') +\n\t\tchalk().green(this.update.latest) + ' \\nRun ' + chalk().cyan('npm i -g ' + this.packageName) + ' to update';\n\n\topts.boxenOpts = opts.boxenOpts || {\n\t\tpadding: 1,\n\t\tmargin: 1,\n\t\talign: 'center',\n\t\tborderColor: 'yellow',\n\t\tborderStyle: 'round'\n\t};\n\n\tvar message = '\\n' + boxen()(opts.message, opts.boxenOpts);\n\n\tif (opts.defer === false) {\n\t\tconsole.error(message);\n\t} else {\n\t\tprocess.on('exit', function () {\n\t\t\tconsole.error(message);\n\t\t});\n\n\t\tprocess.on('SIGINT', function () {\n\t\t\tconsole.error('');\n\t\t\tprocess.exit();\n\t\t});\n\t}\n\n\treturn this;\n};\n\nmodule.exports = function (options) {\n\tvar updateNotifier = new UpdateNotifier(options);\n\tupdateNotifier.check();\n\treturn updateNotifier;\n};\n\nmodule.exports.UpdateNotifier = UpdateNotifier;\n"]}