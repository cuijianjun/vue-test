{"version":3,"sources":["mixins.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,YAAY,QAAQ,WAAR,CAAhB;;AAEA,OAAO,OAAP,GAAiB;AACf,cADe;AAEf,UAFe;AAGf;;AAEA;AACA;AANe,CAAjB,CAOE,SAAS,YAAT,CAAsB,EAAtB,EAA0B,IAA1B,EAAgC;AAChC,MAAI,IAAI,IAAR;AACA,MAAI,YAAY,EAAhB;AACA,IAAE,IAAF,CAAO,EAAP,EAAW,UAAU,IAAV,EAAgB,QAAhB,EAA0B;AACnC,MAAE,IAAF,CAAO,IAAP,EAAa,UAAU,GAAV,EAAe;AAC1B,QAAE,IAAF,CAAO,GAAP,EAAY,UAAU,KAAV,EAAiB,GAAjB,EAAsB;AAChC,YAAI,IAAI,MAAJ,CAAY,GAAE,KAAK,gBAAiB,GAApC,EAAwC,IAAxC,CAA6C,GAA7C,CAAJ,EAAuD;AACrD;AACA;AACA,cAAI,UAAU,UAAU,MAAV,CAAiB,IAAI,OAAJ,CAAY,IAAI,MAAJ,CAAY,GAAE,KAAK,gBAAiB,GAApC,CAAZ,EAAqD,EAArD,CAAjB,CAAd;AACA;AACA,cAAI,GAAG,OAAH,CAAJ,EAAiB;AACf;AACA,gBAAI,MAAM,EAAE,OAAF,CAAU,GAAG,OAAH,CAAV,EAAuB,KAAvB,CAAV;AACA,gBAAI,EAAE,WAAF,CAAc,GAAd,CAAJ,EAAwB;AACtB,wBAAU,IAAV,CAAe,EAAE,MAAM,QAAR,EAAkB,IAAI,IAAI,EAA1B,EAAf;AACD;AACF;AACF;AACF,OAdD;AAeD,KAhBD;AAiBD,GAlBD;;AAoBA,SAAO,SAAP;AACD;;AAED;AACA;AACA,SAAS,QAAT,CAAkB,IAAlB,EAAwB;AACtB,MAAI,IAAI,IAAR;AACA,MAAI,aAAa,EAAE,IAAF,EAAjB;AACA,MAAI,EAAE,OAAF,CAAU,IAAV,CAAJ,EAAqB;AACnB,WAAO,CAAP;AACD,GAFD,MAEO;AACL,QAAI,KAAK,EAAE,IAAF,EAAQ,KAAR,CAAc,UAAd,EAA0B,UAA1B,CAAT;;AAEA;AACA,WAAO,EAAE,QAAF,CAAW,EAAX,IAAiB,EAAE,EAAnB,GAAwB,QAAQ,QAAR,EAA/B;AACD;AACF;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B,CAA1B,EAA6B;AAC3B,MAAI,IAAI,IAAR;AACA,MAAI,SAAS,CAAb,EAAgB;AACd,QAAI,EAAE,OAAF,CAAU,KAAV,CAAJ,EAAsB;AACpB,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AACrC,YAAI,EAAE,SAAF,CAAY,MAAM,CAAN,CAAZ,EAAsB,CAAtB,CAAJ,EAA8B;AAC5B,iBAAO,IAAP;AACD;AACF;AACF,KAND,MAMO,IAAI,EAAE,QAAF,CAAW,KAAX,KAAqB,CAAC,EAAE,OAAF,CAAU,KAAV,CAA1B,EAA4C;AACjD,WAAK,IAAI,CAAT,IAAc,KAAd,EAAqB;AACnB,YAAI,EAAE,SAAF,CAAY,MAAM,CAAN,CAAZ,EAAsB,CAAtB,CAAJ,EAA8B;AAC5B,iBAAO,IAAP;AACD;AACF;AACF,KANM,MAMA,IAAI,MAAM,QAAN,GAAiB,WAAjB,GAA+B,OAA/B,CAAuC,CAAvC,MAA8C,CAAC,CAAnD,EAAsD;AAC3D,aAAO,IAAP;AACD;AACF;AACF","file":"mixins-compiled.js","sourcesContent":["'use strict';\n\nvar shortid = require('shortid');\nvar pluralize = require('pluralize');\n\nmodule.exports = {\n  getRemovable,\n  createId,\n  deepQuery\n\n  // Returns document ids that have unsatisfied relations\n  // Example: a comment that references a post that doesn't exist\n};function getRemovable(db, opts) {\n  var _ = this;\n  var removable = [];\n  _.each(db, function (coll, collName) {\n    _.each(coll, function (doc) {\n      _.each(doc, function (value, key) {\n        if (new RegExp(`${opts.foreignKeySuffix}$`).test(key)) {\n          // Remove foreign key suffix and pluralize it\n          // Example postId -> posts\n          var refName = pluralize.plural(key.replace(new RegExp(`${opts.foreignKeySuffix}$`), ''));\n          // Test if table exists\n          if (db[refName]) {\n            // Test if references is defined in table\n            var ref = _.getById(db[refName], value);\n            if (_.isUndefined(ref)) {\n              removable.push({ name: collName, id: doc.id });\n            }\n          }\n        }\n      });\n    });\n  });\n\n  return removable;\n}\n\n// Return incremented id or uuid\n// Used to override lodash-id's createId with utils.createId\nfunction createId(coll) {\n  var _ = this;\n  var idProperty = _.__id();\n  if (_.isEmpty(coll)) {\n    return 1;\n  } else {\n    var id = _(coll).maxBy(idProperty)[idProperty];\n\n    // Increment integer id or generate string id\n    return _.isFinite(id) ? ++id : shortid.generate();\n  }\n}\n\nfunction deepQuery(value, q) {\n  var _ = this;\n  if (value && q) {\n    if (_.isArray(value)) {\n      for (var i = 0; i < value.length; i++) {\n        if (_.deepQuery(value[i], q)) {\n          return true;\n        }\n      }\n    } else if (_.isObject(value) && !_.isArray(value)) {\n      for (var k in value) {\n        if (_.deepQuery(value[k], q)) {\n          return true;\n        }\n      }\n    } else if (value.toString().toLowerCase().indexOf(q) !== -1) {\n      return true;\n    }\n  }\n}"]}