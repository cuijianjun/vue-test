{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,iBAAiB,QAAQ,iBAAR,CAArB;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,MAAM,QAAQ,OAAR,CAAV;AACA,IAAI,MAAM,QAAQ,oBAAR,CAAV;;AAEA,OAAO,OAAP,GAAiB,YAAY;AAC3B,iBAAe,EAAE,GAAF,EAAf,EAAwB,MAAxB;;AAEA,MAAI,OAAO,MAAM,MAAN,CAAa,QAAb,EAAuB,KAAvB,CAA6B,uBAA7B,EAAsD,OAAtD,CAA8D;AACvE,UAAM;AACJ,aAAO,GADH;AAEJ,mBAAa,UAFT;AAGJ,eAAS;AAHL,KADiE;AAMvE,UAAM;AACJ,aAAO,GADH;AAEJ,mBAAa,UAFT;AAGJ,eAAS;AAHL,KANiE;AAWvE,WAAO;AACL,aAAO,GADF;AAEL,mBAAa;AAFR,KAXgE;AAevE,YAAQ;AACN,aAAO,GADD;AAEN,mBAAa;AAFP,KAf+D;AAmBvE,iBAAa;AACX,aAAO,GADI;AAEX,aAAO,IAFI;AAGX,mBAAa;AAHF,KAnB0D;AAwBvE,YAAQ;AACN,aAAO,GADD;AAEN,mBAAa;AAFP,KAxB+D;AA4BvE,iBAAa;AACX,aAAO,IADI;AAEX,mBAAa;AAFF,KA5B0D;AAgCvE,eAAW;AACT,aAAO,IADE;AAET,mBAAa;AAFJ,KAhC4D;AAoCvE,eAAW;AACT,aAAO,IADE;AAET,mBAAa;AAFJ,KApC4D;AAwCvE,eAAW;AACT,aAAO,GADE;AAET,mBAAa,yBAFJ;AAGT,eAAS;AAHA,KAxC4D;AA6CvE,WAAO;AACL,aAAO,GADF;AAEL,mBAAa;AAFR,KA7CgE;AAiDvE,QAAI;AACF,aAAO,GADL;AAEF,mBAAa,qCAFX;AAGF,eAAS;AAHP,KAjDmE;AAsDvE,sBAAkB;AAChB,aAAO,KADS;AAEhB,mBAAa,iDAFG;AAGhB,eAAS;AAHO,KAtDqD;AA2DvE,WAAO;AACL,aAAO,GADF;AAEL,mBAAa;AAFR,KA3DgE;AA+DvE,YAAQ;AACN,aAAO,GADD;AAEN,mBAAa,qBAFP;AAGN,eAAS;AAHH;AA/D+D,GAA9D,EAoER,OApEQ,CAoEA,OApEA,EAoES,OApET,CAoEiB,WApEjB,EAoE8B,OApE9B,CAoEsC,OApEtC,EAoE+C,OApE/C,CAoEuD,SApEvD,EAoEkE,OApElE,CAoE0E,SApE1E,EAoEqF,IApErF,CAoE0F,MApE1F,EAoEkG,KApElG,CAoEwG,MApExG,EAoEgH,GApEhH,EAoEqH,OApErH,CAoE6H,IAAI,OApEjI,EAoE0I,KApE1I,CAoEgJ,SApEhJ,EAoE2J,GApE3J,EAoEgK,OApEhK,CAoEwK,YApExK,EAoEsL,EApEtL,EAoE0L,OApE1L,CAoEkM,YApElM,EAoEgN,EApEhN,EAoEoN,OApEpN,CAoE4N,+BApE5N,EAoE6P,EApE7P,EAoEiQ,MApEjQ,CAoEwQ,yCApExQ,EAoEmT,OApEnT,CAoE2T,CApE3T,EAoE8T,2BApE9T,EAoE2V,IApEtW;;AAsEA,MAAI,IAAJ;AACD,CA1ED","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar updateNotifier = require('update-notifier');\nvar yargs = require('yargs');\nvar run = require('./run');\nvar pkg = require('../../package.json');\n\nmodule.exports = function () {\n  updateNotifier({ pkg }).notify();\n\n  var argv = yargs.config('config').usage('$0 [options] <source>').options({\n    port: {\n      alias: 'p',\n      description: 'Set port',\n      default: 3000\n    },\n    host: {\n      alias: 'H',\n      description: 'Set host',\n      default: '0.0.0.0'\n    },\n    watch: {\n      alias: 'w',\n      description: 'Watch file(s)'\n    },\n    routes: {\n      alias: 'r',\n      description: 'Path to routes file'\n    },\n    middlewares: {\n      alias: 'm',\n      array: true,\n      description: 'Paths to middleware files'\n    },\n    static: {\n      alias: 's',\n      description: 'Set static files directory'\n    },\n    'read-only': {\n      alias: 'ro',\n      description: 'Allow only GET requests'\n    },\n    'no-cors': {\n      alias: 'nc',\n      description: 'Disable Cross-Origin Resource Sharing'\n    },\n    'no-gzip': {\n      alias: 'ng',\n      description: 'Disable GZIP Content-Encoding'\n    },\n    snapshots: {\n      alias: 'S',\n      description: 'Set snapshots directory',\n      default: '.'\n    },\n    delay: {\n      alias: 'd',\n      description: 'Add delay to responses (ms)'\n    },\n    id: {\n      alias: 'i',\n      description: 'Set database id property (e.g. _id)',\n      default: 'id'\n    },\n    foreignKeySuffix: {\n      alias: 'fks',\n      description: 'Set foreign key suffix (e.g. _id as in post_id)',\n      default: 'Id'\n    },\n    quiet: {\n      alias: 'q',\n      description: 'Suppress log messages from output'\n    },\n    config: {\n      alias: 'c',\n      description: 'Path to config file',\n      default: 'json-server.json'\n    }\n  }).boolean('watch').boolean('read-only').boolean('quiet').boolean('no-cors').boolean('no-gzip').help('help').alias('help', 'h').version(pkg.version).alias('version', 'v').example('$0 db.json', '').example('$0 file.js', '').example('$0 http://example.com/db.json', '').epilog('https://github.com/typicode/json-server').require(1, 'Missing <source> argument').argv;\n\n  run(argv);\n};"]}