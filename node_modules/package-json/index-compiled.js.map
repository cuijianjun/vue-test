{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,cAAc,QAAQ,cAAR,CAAlB;AACA,IAAI,oBAAoB,QAAQ,qBAAR,CAAxB;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAEA,OAAO,OAAP,GAAiB,UAAU,IAAV,EAAgB,OAAhB,EAAyB;AACzC,KAAI,QAAQ,KAAK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAZ;AACA,KAAI,SAAS,YAAY,KAAZ,CAAb;AACA,KAAI,SAAS,IAAI,OAAJ,CAAY,MAAZ,EAAoB,mBAAmB,IAAnB,EAAyB,OAAzB,CAAiC,MAAjC,EAAyC,GAAzC,CAApB,CAAb;AACA,KAAI,WAAW,kBAAkB,MAAlB,CAAf;AACA,KAAI,UAAU,EAAd;;AAEA,KAAI,QAAJ,EAAc;AACb,UAAQ,aAAR,GAAwB,SAAS,IAAT,GAAgB,GAAhB,GAAsB,SAAS,KAAvD;AACA;;AAED,QAAO,IAAI,MAAJ,EAAY;AAClB,QAAM,IADY;AAElB,WAAS;AAFS,EAAZ,EAIL,IAJK,CAIA,UAAU,GAAV,EAAe;AACpB,MAAI,OAAO,IAAI,IAAf;;AAEA,MAAI,YAAY,QAAhB,EAA0B;AACzB,UAAO,KAAK,QAAL,CAAc,KAAK,WAAL,EAAkB,MAAhC,CAAP;AACA,GAFD,MAEO,IAAI,OAAJ,EAAa;AACnB,OAAI,CAAC,KAAK,QAAL,CAAc,OAAd,CAAL,EAA6B;AAC5B,QAAI,WAAW,aAAY,KAAK,QAAjB,CAAf;AACA,cAAU,OAAO,aAAP,CAAqB,QAArB,EAA+B,OAA/B,CAAV;;AAEA,QAAI,CAAC,OAAL,EAAc;AACb,WAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;AACA;AACD;;AAED,UAAO,KAAK,QAAL,CAAc,OAAd,CAAP;;AAEA,OAAI,CAAC,IAAL,EAAW;AACV,UAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;AACA;AACD;;AAED,SAAO,IAAP;AACA,EA3BK,EA4BL,KA5BK,CA4BC,UAAU,GAAV,EAAe;AACrB,MAAI,IAAI,UAAJ,KAAmB,GAAvB,EAA4B;AAC3B,SAAM,IAAI,KAAJ,CAAU,cAAc,IAAd,GAAqB,kBAA/B,CAAN;AACA;;AAED,QAAM,GAAN;AACA,EAlCK,CAAP;AAmCA,CA9CD","file":"index-compiled.js","sourcesContent":["'use strict';\nvar url = require('url');\nvar got = require('got');\nvar registryUrl = require('registry-url');\nvar registryAuthToken = require('registry-auth-token');\nvar semver = require('semver');\n\nmodule.exports = function (name, version) {\n\tvar scope = name.split('/')[0];\n\tvar regUrl = registryUrl(scope);\n\tvar pkgUrl = url.resolve(regUrl, encodeURIComponent(name).replace(/^%40/, '@'));\n\tvar authInfo = registryAuthToken(regUrl);\n\tvar headers = {};\n\n\tif (authInfo) {\n\t\theaders.authorization = authInfo.type + ' ' + authInfo.token;\n\t}\n\n\treturn got(pkgUrl, {\n\t\tjson: true,\n\t\theaders: headers\n\t})\n\t\t.then(function (res) {\n\t\t\tvar data = res.body;\n\n\t\t\tif (version === 'latest') {\n\t\t\t\tdata = data.versions[data['dist-tags'].latest];\n\t\t\t} else if (version) {\n\t\t\t\tif (!data.versions[version]) {\n\t\t\t\t\tvar versions = Object.keys(data.versions);\n\t\t\t\t\tversion = semver.maxSatisfying(versions, version);\n\n\t\t\t\t\tif (!version) {\n\t\t\t\t\t\tthrow new Error('Version doesn\\'t exist');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdata = data.versions[version];\n\n\t\t\t\tif (!data) {\n\t\t\t\t\tthrow new Error('Version doesn\\'t exist');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t})\n\t\t.catch(function (err) {\n\t\t\tif (err.statusCode === 404) {\n\t\t\t\tthrow new Error('Package `' + name + '` doesn\\'t exist');\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t});\n};\n"]}