{"version":3,"sources":["test.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AAAA,IACI,MAAM,QAAQ,KAAR,CADV;AAAA,IAEI,MAAM,IAAI,MAAJ,EAFV;AAAA,IAGI,MAAM,QAAQ,IAAR,CAHV,C,CAGyB;;AAEzB,QAAQ,GAAR,GAAc,GAAd;;AAEA,IAAI,IAAJ,CAAS,WAAT,EAAsB,UAAU,IAAV,EAAgB;AACpC,MAAI,IAAI,IAAI,KAAJ,CAAU,gBAAV,CAAR;;AAEA,OAAK,MAAL,CAAY,EAAE,GAAd,EAAmB,EAAnB,CAAsB,KAAtB,CAA4B,KAA5B;AACA;AACD,CALD;;AAOA,IAAI,IAAJ,CAAS,4BAAT,EAAuC,UAAU,IAAV,EAAgB;;AAErD,MAAI,MAAM,gBAAV;;AAEA,OAAK,MAAL,CAAY,YAAY;AAAE,SAAK,KAAL,CAAW,GAAX;AAAiB,GAA3C,EAA6C,EAA7C,CAAgD,KAAhD;;AAEA,OAAK,MAAL,CAAY,YAAY;AAAE,QAAI,KAAJ,CAAU,GAAV;AAAgB,GAA1C,EAA4C,EAA5C,CAA+C,KAA/C,CAAqD,WAArD,EAAkE,oCAAoC,GAApC,GAA0C,MAA5G;;AAEA;AACD,CATD;;AAWA,IAAI,IAAJ,CAAS,yBAAT,EAAoC,UAAU,IAAV,EAAgB;AAClD,WAAS,UAAT,GAAsB;AAAE,UAAM,IAAI,cAAJ,CAAmB,OAAnB,CAAN;AAAoC;;AAE5D,OAAK,MAAL,CAAY,YAAY;AAAE,QAAI,KAAJ,CAAU,GAAV,EAAe,UAAf;AAA4B,GAAtD,EAAwD,EAAxD,CAA2D,KAA3D,CAAiE,cAAjE,EAAiF,OAAjF;;AAEA;AACD,CAND","file":"test-compiled.js","sourcesContent":["var Code = require('code'),\n    Lab = require('lab'),\n    lab = Lab.script(),\n    jph = require('..'); // 'json-parse-helpfulerror'\n\nexports.lab = lab;\n\nlab.test('can parse', function (done) {\n  var o = jph.parse('{\"foo\": \"bar\"}');\n\n  Code.expect(o.foo).to.equal('bar');\n  done();\n});\n\nlab.test('helpful error for bad JSON', function (done) {\n\n  var bad = \"{'foo': 'bar'}\";\n\n  Code.expect(function () { JSON.parse(bad) }).to.throw();\n\n  Code.expect(function () { jph.parse(bad) }).to.throw(SyntaxError, \"Unexpected token '\\\\'' at 1:2\\n\" + bad + '\\n ^');\n\n  done();\n});\n\nlab.test('fails if reviver throws', function (done) {\n  function badReviver() { throw new ReferenceError('silly'); }\n\n  Code.expect(function () { jph.parse('3', badReviver) }).to.throw(ReferenceError, 'silly');\n\n  done();\n});"]}