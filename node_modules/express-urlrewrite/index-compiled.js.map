{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA;;;;AAIC,IAAI,QAAQ,QAAQ,OAAR,EAAiB,oBAAjB,CAAZ;AACA,IAAI,WAAW,QAAQ,gBAAR,CAAf;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;;AAED;;;;AAIA,OAAO,OAAP,GAAiB,OAAjB;;AAEA;;;;;;;;;AASA,SAAS,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B;AACzB,MAAI,OAAO,EAAX;AAAA,MAAe,EAAf;AAAA,MAAmB,GAAnB;;AAEA,MAAI,GAAJ,EAAS;AACP,SAAK,SAAS,GAAT,EAAc,IAAd,CAAL;AACA,UAAM,MAAM,IAAN,CAAN;AACA,UAAM,wBAAN,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,EAA1C;AACD,GAJD,MAIO;AACL,UAAM,6BAAN,EAAqC,GAArC;AACD;;AAED,SAAO,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC9B,QAAI,OAAO,IAAI,GAAf;AACA,QAAI,CAAJ;AACA,QAAI,GAAJ,EAAS;AACP,UAAI,GAAG,IAAH,CAAQ,IAAR,CAAJ;AACA,UAAI,CAAC,CAAL,EAAQ;AACN,eAAO,MAAP;AACD;AACF;AACD,QAAI,GAAJ,GAAU,CAAC,OAAO,GAAR,EAAa,OAAb,CAAqB,qBAArB,EAA4C,UAAS,CAAT,EAAY,CAAZ,EAAe,IAAf,EAAqB;AACzE,UAAI,IAAJ,EAAU;AACR,YAAI,CAAJ,EAAO,OAAO,EAAE,IAAI,IAAJ,EAAU,KAAV,GAAkB,CAApB,CAAP,CAAP,KACK,OAAO,IAAI,MAAJ,CAAW,IAAX,CAAP;AACN,OAHD,MAGO,IAAI,CAAJ,EAAO;AACZ,eAAO,EAAE,CAAF,CAAP;AACD,OAFM,MAEA;AACL,eAAO,IAAI,MAAJ,CAAW,CAAX,CAAP;AACD;AACF,KATS,CAAV;AAUA,UAAM,kBAAN,EAA0B,IAA1B,EAAgC,IAAI,GAApC;AACA,QAAI,IAAI,GAAJ,CAAQ,OAAR,CAAgB,GAAhB,IAAuB,CAA3B,EAA8B;AAC5B,UAAI,KAAJ,GAAY,IAAI,KAAJ,CAAU,IAAI,GAAd,EAAmB,IAAnB,EAAyB,KAArC;AACA,YAAM,2BAAN,EAAmC,IAAI,KAAvC;AACD;AACD,QAAI,GAAJ,EAAS,OAAT,KACK,KAAK,OAAL;AACN,GA1BD;AA2BD;;AAED;;;;;;;;AAQA,SAAS,KAAT,CAAe,MAAf,EAAuB;AACrB,MAAI,MAAM,EAAV;;AAEA,SAAO,OAAP,CAAe,UAAS,KAAT,EAAgB,CAAhB,EAAmB;AAChC,UAAM,KAAN,GAAc,CAAd;AACA,QAAI,MAAM,IAAV,IAAkB,KAAlB;AACD,GAHD;;AAKA,SAAO,GAAP;AACD","file":"index-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\n var debug = require('debug')('express-urlrewrite');\n var toRegexp = require('path-to-regexp');\n var URL = require('url');\n\n/**\n * Expose `expose`.\n */\n\nmodule.exports = rewrite;\n\n/**\n * Rewrite `src` to `dst`.\n *\n * @param {String|RegExp} src\n * @param {String} dst\n * @return {Function}\n * @api public\n */\n\nfunction rewrite(src, dst) {\n  var keys = [], re, map;\n\n  if (dst) {\n    re = toRegexp(src, keys);\n    map = toMap(keys);\n    debug('rewrite %s -> %s    %s', src, dst, re);\n  } else {\n    debug('rewrite current route -> %s', src);\n  }\n\n  return function(req, res, next) {\n    var orig = req.url;\n    var m;\n    if (dst) {\n      m = re.exec(orig);\n      if (!m) {\n        return next();\n      }\n    }\n    req.url = (dst || src).replace(/\\$(\\d+)|(?::(\\w+))/g, function(_, n, name) {\n      if (name) {\n        if (m) return m[map[name].index + 1];\n        else return req.params[name];\n      } else if (m) {\n        return m[n];\n      } else {\n        return req.params[n];\n      }\n    });\n    debug('rewrite %s -> %s', orig, req.url);\n    if (req.url.indexOf('?') > 0) {\n      req.query = URL.parse(req.url, true).query;\n      debug('rewrite updated new query', req.query);\n    }\n    if (dst) next();\n    else next('route');\n  }\n}\n\n/**\n * Turn params array into a map for quick lookup.\n *\n * @param {Array} params\n * @return {Object}\n * @api private\n */\n\nfunction toMap(params) {\n  var map = {};\n\n  params.forEach(function(param, i) {\n    param.index = i;\n    map[param.name] = param;\n  });\n\n  return map;\n}\n"]}