{"version":3,"sources":["_customDefaultsAssignIn.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,MAAR,CAAT;;AAEA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,iBAAiB,YAAY,cAAjC;;AAEA;;;;;;;;;;;;AAYA,SAAS,sBAAT,CAAgC,QAAhC,EAA0C,QAA1C,EAAoD,GAApD,EAAyD,MAAzD,EAAiE;AAC/D,MAAI,aAAa,SAAb,IACC,GAAG,QAAH,EAAa,YAAY,GAAZ,CAAb,KAAkC,CAAC,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,CADxC,EAC2E;AACzE,WAAO,QAAP;AACD;AACD,SAAO,QAAP;AACD;;AAED,OAAO,OAAP,GAAiB,sBAAjB","file":"_customDefaultsAssignIn-compiled.js","sourcesContent":["var eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n * of source objects to the destination object for all destination properties\n * that resolve to `undefined`.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to assign.\n * @param {Object} object The parent object of `objValue`.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsAssignIn(objValue, srcValue, key, object) {\n  if (objValue === undefined ||\n      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n    return srcValue;\n  }\n  return objValue;\n}\n\nmodule.exports = customDefaultsAssignIn;\n"]}