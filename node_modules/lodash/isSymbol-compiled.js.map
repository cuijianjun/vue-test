{"version":3,"sources":["isSymbol.js"],"names":[],"mappings":";AAAA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AAAA,IACI,eAAe,QAAQ,gBAAR,CADnB;;AAGA;AACA,IAAI,YAAY,iBAAhB;;AAEA;;;;;;;;;;;;;;;;;AAiBA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,WAAO,QAAO,KAAP,yCAAO,KAAP,MAAgB,QAAhB,IACJ,aAAa,KAAb,KAAuB,WAAW,KAAX,KAAqB,SAD/C;AAED;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"isSymbol-compiled.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n"]}