{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,aAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,UAAU,EAAd;;AAEA;AACA;AACA,SAAS,WAAT,CAAsB,IAAtB,EAA4B;AAC1B,SAAO,KAAK,IAAL,CAAU,KAAK,OAAL,CAAa,IAAb,CAAV,EAA8B,OAAO,KAAK,QAAL,CAAc,IAAd,CAArC,CAAP;AACD;;AAED,SAAS,MAAT,CAAiB,IAAjB,EAAuB;AACrB,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,SAAL,GAAiB,EAAjB;AACA,OAAK,QAAL,GAAgB,IAAhB;AACA,OAAK,aAAL,GAAqB,EAArB;AACD;;AAED,OAAO,SAAP,CAAiB,KAAjB,GAAyB,UAAU,IAAV,EAAgB,EAAhB,EAAoB;AAC3C,MAAI,KAAK,IAAT,EAAe;AACb;AACA;AACA,SAAK,aAAL,CAAmB,IAAnB,CAAwB,EAAxB;AACA;AACA,SAAK,QAAL,GAAgB,IAAhB;AACD,GAND,MAMO;AACL;AACA;AACA,SAAK,IAAL,GAAY,IAAZ;;AAEA;AACA,QAAI,UAAU,YAAY,KAAK,IAAjB,CAAd;AACA,OAAG,SAAH,CAAa,OAAb,EAAsB,IAAtB,EAA4B,UAAU,GAAV,EAAe;AACzC,UAAI,GAAJ,EAAS;AACP;AACA;AACA,eAAO,KAAK,SAAL,CAAe,MAAtB;AAA8B,eAAK,SAAL,CAAe,KAAf,GAAuB,GAAvB;AAA9B,SACA,GAAG,GAAH;AACA;AACD;;AAED;AACA,SAAG,MAAH,CAAU,OAAV,EAAmB,KAAK,IAAxB,EAA8B,UAAU,GAAV,EAAe;AAC3C;AACA,eAAO,KAAK,SAAL,CAAe,MAAtB;AAA8B,eAAK,SAAL,CAAe,KAAf,GAAuB,GAAvB;AAA9B,SACA;;AAEA;AACA,aAAK,IAAL,GAAY,KAAZ;;AAEA;AACA,YAAI,KAAK,QAAT,EAAmB;AACjB,cAAI,OAAO,KAAK,QAAhB;AACA,eAAK,SAAL,GAAiB,KAAK,aAAtB;;AAEA,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,aAAL,GAAqB,EAArB;;AAEA,eAAK,KAAL,CAAW,IAAX,EAAiB,KAAK,SAAL,CAAe,GAAf,EAAjB;AACD;AACF,OAlB6B,CAkB5B,IAlB4B,CAkBvB,IAlBuB,CAA9B;AAmBD,KA7B2B,CA6B1B,IA7B0B,CA6BrB,IA7BqB,CAA5B;AA8BD;AACF,CA7CD;;AA+CA,OAAO,OAAP,CAAe,SAAf,GAA2B,UAAU,IAAV,EAAgB,IAAhB,EAAsB,EAAtB,EAA0B;AACnD;AACA,SAAO,KAAK,OAAL,CAAa,IAAb,CAAP;;AAEA;AACA,UAAQ,IAAR,IAAgB,QAAQ,IAAR,KAAiB,IAAI,MAAJ,CAAW,IAAX,CAAjC;;AAEA;AACA,UAAQ,IAAR,EAAc,KAAd,CAAoB,IAApB,EAA0B,EAA1B;AACD,CATD;;AAWA,OAAO,OAAP,CAAe,aAAf,GAA+B,UAAU,IAAV,EAAgB,IAAhB,EAAsB;AACnD,KAAG,aAAH,CAAiB,YAAY,IAAZ,CAAjB,EAAoC,IAApC;AACA,KAAG,UAAH,CAAc,YAAY,IAAZ,CAAd,EAAiC,IAAjC;AACD,CAHD","file":"index-compiled.js","sourcesContent":["var fs = require('graceful-fs')\nvar path = require('path')\n\nvar writers = {}\n\n// Returns a temporary file\n// Example: for /some/file will return /some/.~file\nfunction getTempFile (file) {\n  return path.join(path.dirname(file), '.~' + path.basename(file))\n}\n\nfunction Writer (file) {\n  this.file = file\n  this.callbacks = []\n  this.nextData = null\n  this.nextCallbacks = []\n}\n\nWriter.prototype.write = function (data, cb) {\n  if (this.lock) {\n    // File is locked\n    // Save callback for later\n    this.nextCallbacks.push(cb)\n    // Set next data to be written\n    this.nextData = data\n  } else {\n    // File is not locked\n    // Lock it\n    this.lock = true\n\n    // Write data to a temporary file\n    var tmpFile = getTempFile(this.file)\n    fs.writeFile(tmpFile, data, function (err) {\n      if (err) {\n        // On error, call all the stored callbacks and the current one\n        // Then return\n        while (this.callbacks.length) this.callbacks.shift()(err)\n        cb(err)\n        return\n      }\n\n      // On success rename the temporary file to the real file\n      fs.rename(tmpFile, this.file, function (err) {\n        // call all the stored callbacks and the current one\n        while (this.callbacks.length) this.callbacks.shift()(err)\n        cb()\n\n        // Unlock file\n        this.lock = false\n\n        // Write next data if any\n        if (this.nextData) {\n          var data = this.nextData\n          this.callbacks = this.nextCallbacks\n\n          this.nextData = null\n          this.nextCallbacks = []\n\n          this.write(data, this.callbacks.pop())\n        }\n      }.bind(this))\n    }.bind(this))\n  }\n}\n\nmodule.exports.writeFile = function (file, data, cb) {\n  // Convert to absolute path\n  file = path.resolve(file)\n\n  // Create or get writer\n  writers[file] = writers[file] || new Writer(file)\n\n  // Write\n  writers[file].write(data, cb)\n}\n\nmodule.exports.writeFileSync = function (file, data) {\n  fs.writeFileSync(getTempFile(file), data)\n  fs.renameSync(getTempFile(file), file)\n}\n"]}