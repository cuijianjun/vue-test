{"version":3,"sources":["auth-token.test.js"],"names":[],"mappings":"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","file":"auth-token.test-compiled.js","sourcesContent":["var fs = require('fs')\nvar path = require('path')\nvar mocha = require('mocha')\nvar assert = require('assert')\nvar requireUncached = require('require-uncached')\n\nvar npmRcPath = path.join(__dirname, '..', '.npmrc')\nvar afterEach = mocha.afterEach\nvar describe = mocha.describe\nvar it = mocha.it\n\nvar base64 = require('../base64')\nvar decodeBase64 = base64.decodeBase64\nvar encodeBase64 = base64.encodeBase64\n\n/* eslint max-nested-callbacks: [\"error\", 4] */\n\ndescribe('auth-token', function () {\n  afterEach(function (done) {\n    fs.unlink(npmRcPath, function () {\n      done()\n    })\n  })\n\n  it('should read global if no local is found', function () {\n    var getAuthToken = requireUncached('../index')\n    getAuthToken()\n  })\n\n  it('should return undefined if no auth token is given for registry', function (done) {\n    fs.writeFile(npmRcPath, 'registry=http://registry.npmjs.eu/', function (err) {\n      var getAuthToken = requireUncached('../index')\n      assert(!err, err)\n      assert(!getAuthToken())\n      done()\n    })\n  })\n\n  describe('legacy auth token', function () {\n    it('should return auth token if it is defined in the legacy way via the `_auth` key', function (done) {\n      var content = [\n        '_auth=foobar',\n        'registry=http://registry.foobar.eu/'\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'foobar', type: 'Basic'})\n        done()\n      })\n    })\n  })\n\n  describe('bearer token', function () {\n    it('should return auth token if registry is defined', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_authToken=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'foobar', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should use npmrc passed in', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_authToken=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        const npmrc = {\n          'registry': 'http://registry.foobar.eu/',\n          '//registry.foobar.eu/:_authToken': 'qar'\n        }\n        assert.deepEqual(getAuthToken({npmrc: npmrc}), {token: 'qar', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should return auth token if registry url has port specified', function (done) {\n      var content = [\n        'registry=http://localhost:8770/',\n        // before the patch this token was selected.\n        '//localhost/:_authToken=ohno',\n        '//localhost:8770/:_authToken=beepboop', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'beepboop', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should return auth token defined by reference to an environment variable (with curly braces)', function (done) {\n      var environmentVariable = '__REGISTRY_AUTH_TOKEN_NPM_TOKEN__'\n      var content = [\n        'registry=http://registry.foobar.cc/',\n        '//registry.foobar.cc/:_authToken=${' + environmentVariable + '}', ''\n      ].join('\\n')\n      process.env[environmentVariable] = 'foobar'\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'foobar', type: 'Bearer'})\n        delete process.env[environmentVariable]\n        done()\n      })\n    })\n\n    it('should return auth token defined by reference to an environment variable (without curly braces)', function (done) {\n      var environmentVariable = '__REGISTRY_AUTH_TOKEN_NPM_TOKEN__'\n      var content = [\n        'registry=http://registry.foobar.cc/',\n        '//registry.foobar.cc/:_authToken=$' + environmentVariable, ''\n      ].join('\\n')\n      process.env[environmentVariable] = 'foobar'\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'foobar', type: 'Bearer'})\n        delete process.env[environmentVariable]\n        done()\n      })\n    })\n\n    it('should try with and without a slash at the end of registry url', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu',\n        '//registry.foobar.eu:_authToken=barbaz', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'barbaz', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should fetch for the registry given (if defined)', function (done) {\n      var content = [\n        '//registry.foobar.eu:_authToken=barbaz',\n        '//registry.blah.foo:_authToken=whatev',\n        '//registry.last.thing:_authToken=yep', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken('//registry.blah.foo'), {token: 'whatev', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('recursively finds registries for deep url if option is set', function (done, undef) {\n      var opts = {recursive: true}\n      var content = [\n        '//registry.blah.com/foo:_authToken=whatev',\n        '//registry.blah.org/foo/bar:_authToken=recurseExactlyOneLevel',\n        '//registry.blah.edu/foo/bar/baz:_authToken=recurseNoLevel',\n        '//registry.blah.eu:_authToken=yep', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken('https://registry.blah.edu/foo/bar/baz', opts), {token: 'recurseNoLevel', type: 'Bearer'})\n        assert.deepEqual(getAuthToken('https://registry.blah.org/foo/bar/baz', opts), {token: 'recurseExactlyOneLevel', type: 'Bearer'})\n        assert.deepEqual(getAuthToken('https://registry.blah.com/foo/bar/baz', opts), {token: 'whatev', type: 'Bearer'})\n        assert.deepEqual(getAuthToken('http://registry.blah.eu/what/ever', opts), {token: 'yep', type: 'Bearer'})\n        assert.deepEqual(getAuthToken('http://registry.blah.eu//what/ever', opts), undefined, 'does not hang')\n        assert.equal(getAuthToken('//some.registry', opts), undef)\n        done()\n      })\n    })\n\n    it('should try both with and without trailing slash', function (done) {\n      fs.writeFile(npmRcPath, '//registry.blah.com:_authToken=whatev', function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken('https://registry.blah.com'), {token: 'whatev', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should prefer bearer token over basic token', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_authToken=bearerToken',\n        '//registry.foobar.eu/:_password=' + encodeBase64('foobar'),\n        '//registry.foobar.eu/:username=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken('//registry.foobar.eu'), {token: 'bearerToken', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('\"nerf darts\" registry urls', function (done, undef) {\n      fs.writeFile(npmRcPath, '//contoso.pkgs.visualstudio.com/_packaging/MyFeed/npm/:_authToken=heider', function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(\n          getAuthToken('https://contoso.pkgs.visualstudio.com/_packaging/MyFeed/npm/registry'),\n          {token: 'heider', type: 'Bearer'}\n        )\n        done()\n      })\n    })\n  })\n\n  describe('basic token', function () {\n    it('should return undefined if password or username are missing', function (done, undef) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_password=' + encodeBase64('foobar'),\n        '//registry.foobar.com/:username=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.equal(getAuthToken('//registry.foobar.eu'), undef)\n        assert.equal(getAuthToken('//registry.foobar.com'), undef)\n        done()\n      })\n    })\n\n    it('should return basic token if username and password are defined', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_password=' + encodeBase64('foobar'),\n        '//registry.foobar.eu/:username=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken()\n        assert.deepEqual(token, {\n          token: 'Zm9vYmFyOmZvb2Jhcg==',\n          type: 'Basic',\n          username: 'foobar',\n          password: 'foobar'\n        })\n        assert.equal(decodeBase64(token.token), 'foobar:foobar')\n        done()\n      })\n    })\n\n    it('should return basic token if registry url has port specified', function (done) {\n      var content = [\n        'registry=http://localhost:8770/',\n        // before the patch this token was selected.\n        '//localhost/:_authToken=ohno',\n        '//localhost:8770/:_password=' + encodeBase64('foobar'),\n        '//localhost:8770/:username=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken()\n        assert.deepEqual(token, {\n          token: 'Zm9vYmFyOmZvb2Jhcg==',\n          type: 'Basic',\n          username: 'foobar',\n          password: 'foobar'\n        })\n        assert.equal(decodeBase64(token.token), 'foobar:foobar')\n        done()\n      })\n    })\n\n    it('should try with and without a slash at the end of registry url', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu',\n        '//registry.foobar.eu:_password=' + encodeBase64('barbay'),\n        '//registry.foobar.eu:username=barbaz', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken()\n        assert.deepEqual(token, {\n          token: 'YmFyYmF6OmJhcmJheQ==',\n          type: 'Basic',\n          password: 'barbay',\n          username: 'barbaz'\n        })\n        assert.equal(decodeBase64(token.token), 'barbaz:barbay')\n        done()\n      })\n    })\n\n    it('should fetch for the registry given (if defined)', function (done) {\n      var content = [\n        '//registry.foobar.eu:_authToken=barbaz',\n        '//registry.blah.foo:_password=' + encodeBase64('barbay'),\n        '//registry.blah.foo:username=barbaz',\n        '//registry.last.thing:_authToken=yep', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken('//registry.blah.foo')\n        assert.deepEqual(token, {\n          token: 'YmFyYmF6OmJhcmJheQ==',\n          type: 'Basic',\n          password: 'barbay',\n          username: 'barbaz'\n        })\n        assert.equal(decodeBase64(token.token), 'barbaz:barbay')\n        done()\n      })\n    })\n\n    it('recursively finds registries for deep url if option is set', function (done, undef) {\n      var opts = {recursive: true}\n      var content = [\n        '//registry.blah.com/foo:_password=' + encodeBase64('barbay'),\n        '//registry.blah.com/foo:username=barbaz',\n        '//registry.blah.eu:username=barbaz',\n        '//registry.blah.eu:_password=' + encodeBase64('foobaz'), ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken('https://registry.blah.com/foo/bar/baz', opts)\n        assert.deepEqual(token, {\n          token: 'YmFyYmF6OmJhcmJheQ==',\n          type: 'Basic',\n          password: 'barbay',\n          username: 'barbaz'\n        })\n        assert.equal(decodeBase64(token.token), 'barbaz:barbay')\n        token = getAuthToken('https://registry.blah.eu/foo/bar/baz', opts)\n        assert.deepEqual(token, {\n          token: 'YmFyYmF6OmZvb2Jheg==',\n          type: 'Basic',\n          password: 'foobaz',\n          username: 'barbaz'\n        })\n        assert.equal(decodeBase64(token.token), 'barbaz:foobaz')\n        assert.equal(getAuthToken('//some.registry', opts), undef)\n        done()\n      })\n    })\n  })\n})\n"]}